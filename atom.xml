<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Zhang21</title>
  <subtitle>Like the word melancholy</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://zhang21.github.io/"/>
  <updated>2017-11-06T05:27:19.950Z</updated>
  <id>https://zhang21.github.io/</id>
  
  <author>
    <name>Zhang21</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Love at First Sight</title>
    <link href="https://zhang21.github.io/2017/11/06/Love-at-First-Sight/"/>
    <id>https://zhang21.github.io/2017/11/06/Love-at-First-Sight/</id>
    <published>2017-11-06T02:03:00.000Z</published>
    <updated>2017-11-06T05:27:19.950Z</updated>
    
    <content type="html"><![CDATA[<p>——波兰诗人维斯拉瓦·辛波丝卡(Wislawa Szymborska)<br><br></p>
<p>They’re both convinced<br>that a sudden passion joined them.</p>
<p>Such certainty is beautiful,<br>but uncertainty is more beautiful still.</p>
<p>Since they’d never met before,<br>they’re sure that there’d been nothing between them.</p>
<p>But what’s the word from the streets, staircases, hallways –<br>perhaps they’ve passed each other a million times?<br><a id="more"></a></p>
<p>I want to ask them<br>if they don’t remember<br>a moment face to face<br>in some revolving door?<br>perhaps a “sorry” muttered in a crowd?<br>a curt “wrong number” caught in the receiver?<br>but I know the answer.</p>
<p>No, they don’t remember<br>They’d be amazed to hear<br>that Chance has been toying with them<br>now for years.</p>
<p>Not quite ready yet<br>to become their Destiny,<br>it pushed them close, drove them apart,<br>it barred their path, stifling a laugh,<br>and then leaped aside.</p>
<p>There were signs and signals,<br>even if they couldn’t read them yet.</p>
<p>Perhaps three years ago<br>or just last Tuesday<br>a certain leaf fluttered<br>from one shoulder to another?</p>
<p>Something was dropped and then picked up.<br>Who knows, maybe the ball that vanished into childhood’s thicket?</p>
<p>There were doorknobs and doorbells<br>where one touch had covered another beforehand.</p>
<p>Suitcases checked and standing side by side.<br>One night, perhaps, the same dream,<br>grown hazy by morning.</p>
<p>Every beginning is only a sequel,<br>after all,<br>and the book of events<br>is always open halfway through.</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;——波兰诗人维斯拉瓦·辛波丝卡(Wislawa Szymborska)&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;They’re both convinced&lt;br&gt;that a sudden passion joined them.&lt;/p&gt;
&lt;p&gt;Such certainty is beautiful,&lt;br&gt;but uncertainty is more beautiful still.&lt;/p&gt;
&lt;p&gt;Since they’d never met before,&lt;br&gt;they’re sure that there’d been nothing between them.&lt;/p&gt;
&lt;p&gt;But what’s the word from the streets, staircases, hallways –&lt;br&gt;perhaps they’ve passed each other a million times?&lt;br&gt;
    
    </summary>
    
      <category term="Literature" scheme="https://zhang21.github.io/categories/Literature/"/>
    
    
      <category term="Poetry" scheme="https://zhang21.github.io/tags/Poetry/"/>
    
  </entry>
  
  <entry>
    <title>LinuxShell脚本攻略</title>
    <link href="https://zhang21.github.io/2017/10/24/LinuxShell%E8%84%9A%E6%9C%AC%E6%94%BB%E7%95%A5/"/>
    <id>https://zhang21.github.io/2017/10/24/LinuxShell脚本攻略/</id>
    <published>2017-10-24T10:16:38.000Z</published>
    <updated>2017-11-07T09:17:09.694Z</updated>
    
    <content type="html"><![CDATA[<h1 id="小试牛刀"><a href="#小试牛刀" class="headerlink" title="小试牛刀"></a>小试牛刀</h1><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#bash(Bourne Again Shell)，shell环境使得用户能与操作系统的内核进行交互操作</span></div><div class="line"></div><div class="line"><span class="meta">#!/bin/bash</span></div><div class="line"><span class="comment">#date</span></div><div class="line"><span class="comment">#description</span></div><div class="line"></div><div class="line">cmd1; cmd2</div><div class="line">cmd3</div><div class="line"></div><div class="line"><span class="comment">#sh /path/xx.sh</span></div><div class="line"><span class="comment">#Bash还有一个历史记录文件 ~/.bash_history</span></div></pre></td></tr></table></figure>
<a id="more"></a>
<p><br></p>
<h2 id="终端打印"><a href="#终端打印" class="headerlink" title="终端打印"></a>终端打印</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">#终端作为交互式工具，用户可以通过它与shell环境进行交互</div><div class="line"></div><div class="line">echo &apos;$var&apos;</div><div class="line">echo $var</div><div class="line">echo -e &quot;1\t2\t3&quot;</div><div class="line">echo -e &apos;\e[1;31m Red color \e[0m&apos;    #彩色</div><div class="line"></div><div class="line">echo &#123;1..10&#125;		#输出1到10</div><div class="line">echo &#123;A..H&#125;		#for i in &#123;a..z&#125;</div><div class="line"></div><div class="line">cat &lt;&lt; EOF</div><div class="line">11</div><div class="line">22</div><div class="line">33</div><div class="line">EOF</div><div class="line"></div><div class="line"># \转义字符</div><div class="line">printf &quot;%-5s %-10s $-4.2f\n&quot; 001 Zhang 56.789</div><div class="line">#格式替代符%s %d %c %f, -左对齐</div></pre></td></tr></table></figure>
<p><br></p>
<h2 id="玩转变量和环境变量"><a href="#玩转变量和环境变量" class="headerlink" title="玩转变量和环境变量"></a>玩转变量和环境变量</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#Bash中，每一个变量默认值值都是字符串形式</span></div><div class="line"><span class="comment">#环境变量和自定义变量</span></div><div class="line"></div><div class="line"><span class="built_in">echo</span> <span class="variable">$SHELL</span></div><div class="line"><span class="built_in">echo</span> <span class="variable">$UID</span></div><div class="line"></div><div class="line">var=value	<span class="comment">#这是赋值</span></div><div class="line"><span class="comment">#var = value这是相等操作</span></div><div class="line"><span class="built_in">echo</span> <span class="variable">$var</span></div><div class="line"><span class="built_in">echo</span> <span class="variable">$&#123;var&#125;</span></div><div class="line"><span class="built_in">echo</span> <span class="variable">$&#123;#var&#125;</span>	<span class="comment">#字符数</span></div><div class="line"></div><div class="line"><span class="comment">#export用来设置环境变量，此后，任何shell中的程序都会继承环境变量</span></div><div class="line">ZHANG=Gentleman</div><div class="line"><span class="built_in">export</span> ZHANG</div><div class="line"></div><div class="line">PATH=<span class="string">"<span class="variable">$PATH</span>:/home/zhang/bin"</span></div><div class="line"><span class="built_in">export</span> <span class="variable">$PATH</span></div></pre></td></tr></table></figure>
<p><br></p>
<h2 id="通过shell进行数学运算"><a href="#通过shell进行数学运算" class="headerlink" title="通过shell进行数学运算"></a>通过shell进行数学运算</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#let, expr, bc, [], (())</span></div><div class="line"><span class="comment">#要注意默认是字符串类型哦</span></div><div class="line"></div><div class="line">n1=1;n2=2</div><div class="line"><span class="built_in">let</span> sum=n1+n2</div><div class="line"><span class="built_in">let</span> n1++;<span class="built_in">let</span> n2-=1</div><div class="line"></div><div class="line">sum=$[ n1 + n2 ]</div><div class="line">sum2=$(( sum + 3 ))</div><div class="line"></div><div class="line">sum=`expr 3 + 4`</div><div class="line"></div><div class="line"><span class="comment">#浮点计算 bc</span></div><div class="line"><span class="built_in">echo</span> <span class="string">"8 * 1.1"</span> | bc</div><div class="line"></div><div class="line"><span class="comment">#设置小数点精度</span></div><div class="line"><span class="built_in">echo</span> <span class="string">"scale=2; 3/8"</span> | bc</div><div class="line"></div><div class="line"><span class="comment">#进制转换</span></div><div class="line">num=100</div><div class="line"><span class="built_in">echo</span> <span class="string">"obase=2; <span class="variable">$num</span>"</span> | bc</div><div class="line"></div><div class="line">num=1100100</div><div class="line"><span class="built_in">echo</span> <span class="string">"obase=10; ibase=2; <span class="variable">$num</span>"</span> | bc</div><div class="line"></div><div class="line"><span class="comment">#平方和平方根</span></div><div class="line"><span class="built_in">echo</span> <span class="string">"sqrt(100)"</span> | bc</div><div class="line"><span class="built_in">echo</span> <span class="string">"10^2"</span> | bc</div></pre></td></tr></table></figure>
<p><br></p>
<h2 id="文件描述符合重定向"><a href="#文件描述符合重定向" class="headerlink" title="文件描述符合重定向"></a>文件描述符合重定向</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#最常用的文件描述符是 stdin(0), stdout(1), stderr(2); 通过内容过滤将输出重定向到文件</span></div><div class="line"></div><div class="line"><span class="built_in">echo</span> <span class="string">"This is a sample text 1"</span> &gt; temp.txt	<span class="comment">#覆盖</span></div><div class="line"><span class="built_in">echo</span> <span class="string">"This is sample text 2"</span> &gt;&gt; temp.txt	<span class="comment">#追加</span></div><div class="line"></div><div class="line">ls + &gt;stdout.txt 2&gt;stderr.txt</div><div class="line">cmd 2&gt;&amp;1 /dev/null  == com &amp;&gt; /dev/null		<span class="comment">#null设备也被称为黑洞</span></div><div class="line"></div><div class="line"><span class="comment">#当一个command发生错误并退回时，它会返回一个非0的状态码</span></div><div class="line"><span class="built_in">echo</span> $?</div><div class="line"></div><div class="line"><span class="comment">#tee命令，一方面可将数据重定向到文件，另一方面还可提供一份重定向数据的副本作为后续命令的stdin</span></div><div class="line"><span class="comment">#tee默认覆盖文件，-a选项追加</span></div><div class="line">cat temp.txt | tee tee.txt | cat -n</div></pre></td></tr></table></figure>
<p><br></p>
<h2 id="数组和关联数组"><a href="#数组和关联数组" class="headerlink" title="数组和关联数组"></a>数组和关联数组</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#数组借助索引将多个独立的数据存储为一个集合</span></div><div class="line"><span class="comment">#普通数组只能使用整数作为数组索引，而关联数组可以使用字符串作为数组索引</span></div><div class="line"><span class="comment">#还可将数组定义成一组索引-值(index-value)</span></div><div class="line"></div><div class="line">arr=(1 two 3 four 5)</div><div class="line"><span class="built_in">echo</span> <span class="variable">$&#123;arr[0]&#125;</span></div><div class="line">arr[0]=One</div><div class="line"></div><div class="line">index=3</div><div class="line"><span class="built_in">echo</span> $&#123;arr[<span class="variable">$index</span>]		<span class="comment">#arr[3]</span></div><div class="line"><span class="built_in">echo</span> <span class="variable">$&#123;arr[*]&#125;</span></div><div class="line"><span class="built_in">echo</span> <span class="variable">$&#123;#arr[*]&#125;</span>		<span class="comment">#arr-length</span></div><div class="line"></div><div class="line"><span class="comment">#关联数组可用任意文本作为数组索引</span></div><div class="line"><span class="built_in">declare</span> -A ass_arr</div><div class="line">ass_arr=([index1]=val1 [index2]=val2 ...)	<span class="comment">#内嵌索引-值</span></div><div class="line">ass_arr[index3]=val3	<span class="comment">#独立索引-值</span></div><div class="line"><span class="built_in">echo</span> <span class="variable">$&#123;!ass_arr[*]&#125;</span>		<span class="comment">#列出数组索引</span></div></pre></td></tr></table></figure>
<p><br></p>
<h2 id="别名"><a href="#别名" class="headerlink" title="别名"></a>别名</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#alias作用是暂时的，关闭终端后别名就失效；</span></div><div class="line"><span class="comment">#为使别名一直保持，可将其写入 ~/.bashrc，因为每一个新的shell都会执行~/.bashrc中的命令</span></div><div class="line"><span class="comment">#新设置的别名将取代已有别名</span></div><div class="line"></div><div class="line"><span class="built_in">alias</span> vi=vim; <span class="built_in">unalias</span> vi</div><div class="line"><span class="built_in">echo</span> <span class="string">"alias ll='ls -l --color=auto'"</span> &gt;&gt; ~/.bashrc</div><div class="line"></div><div class="line"><span class="comment">#\对别名命令进行转义，执行原本的命令。避免攻击者利用别名将某些特权命令替换成别有用心的命令</span></div><div class="line">\vi test.sh</div></pre></td></tr></table></figure>
<p><br></p>
<h2 id="获取、设置日期和延时"><a href="#获取、设置日期和延时" class="headerlink" title="获取、设置日期和延时"></a>获取、设置日期和延时</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">#很多应用程序需要以不同的格式打印日期，设置日期和时间，以及根据日期和时间执行操作;</div><div class="line">#延时通常用于在程序执行过程中提供一段等待时间;</div><div class="line">#在Unix-like系统中，日期被存储为一个整数，其大小为世界标准时间1970年1月1日0时0分0秒起所流逝的秒数；</div><div class="line">#这种计时方式被称之为 纪元时或Unix时间；</div><div class="line">#通过纪元时间，可知道两个日期之间相隔了多少秒</div><div class="line">#编写以循环方式运行的监视脚本时，设置时间间隔是必不可少的</div><div class="line"></div><div class="line">date +%s</div><div class="line"></div><div class="line">#!/bin/bash</div><div class="line">start=$(date +%s)</div><div class="line">commands</div><div class="line">sleep 1</div><div class="line">end=$(date +%s)</div><div class="line">diff=$((end - start))</div><div class="line">echo &quot;$diff seconds&quot;</div></pre></td></tr></table></figure>
<p><br></p>
<h2 id="调试脚本"><a href="#调试脚本" class="headerlink" title="调试脚本"></a>调试脚本</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">#调试功能能在出现一些异常情况时生成运行信息</div><div class="line"></div><div class="line">#!/bin/bash -xv</div><div class="line">sh -x</div><div class="line">sh -n</div></pre></td></tr></table></figure>
<p><br></p>
<h2 id="函数和参数"><a href="#函数和参数" class="headerlink" title="函数和参数"></a>函数和参数</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">function fname()</div><div class="line">&#123;</div><div class="line">statements</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line">fname()</div><div class="line">&#123;</div><div class="line">echo $1, $2		#访问第参数1和参数2,$n第n个参数</div><div class="line">echo &quot;$@&quot;		#以列表的形式一次性打印所有参数</div><div class="line">echo &quot;$*&quot;		#类似于$@，但参数被作为单个实体</div><div class="line">return 0		#f返回值</div><div class="line">&#125;</div><div class="line">fname 1 22 333	#返回上面定义的变量</div><div class="line"></div><div class="line"></div><div class="line">#递归函数，能够调用自身，不断地生成新的进程，最终会造成xx</div><div class="line">#导出函数，使用export导出，这样函数作用域就可以扩展到子进程</div><div class="line">export -f fname</div><div class="line">#读取命令返回值</div><div class="line">echo $?</div></pre></td></tr></table></figure>
<p><br></p>
<h2 id="读取命令序列输出"><a href="#读取命令序列输出" class="headerlink" title="读取命令序列输出"></a>读取命令序列输出</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">#输入通常是stdin，输出stderr或stdout,这些命令称为 过滤器(filter)。我们使用 管道(pipe) 来连接每一个过滤器</div><div class="line">cmd1 | cmd2 | cmd3</div><div class="line"></div><div class="line">#子shell，子shell生成独立的进程，不会对当前shell有任何影响，所做改变仅限于子shell内</div><div class="line">zhang=$(ls | cat -n)</div><div class="line">#反引用</div><div class="line">zhang=`ls | cat -n`</div></pre></td></tr></table></figure>
<p><br></p>
<h2 id="读取字符"><a href="#读取字符" class="headerlink" title="读取字符"></a>读取字符</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">#read是一个重要的从标准输入中读取文本的命令</div><div class="line">#可以使用read以交互的形式来读取用户的输入</div><div class="line"></div><div class="line">read -n 5 zhang		#读取字符数</div><div class="line">echo $zhang</div><div class="line"></div><div class="line">read -s passwd		#不回显</div><div class="line">echo $passwd</div><div class="line"></div><div class="line">read -t 5 zhang		#超时时间</div><div class="line">echo $zhang</div><div class="line"></div><div class="line">read -p zhang		#显示提示信息</div><div class="line">echo $zhang</div><div class="line"></div><div class="line">read -d &quot;:&quot; zhang		#定界符结束输入</div><div class="line">123：</div><div class="line">echo $zhang</div></pre></td></tr></table></figure>
<p><br></p>
<h2 id="字段分隔符和迭代器"><a href="#字段分隔符和迭代器" class="headerlink" title="字段分隔符和迭代器"></a>字段分隔符和迭代器</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">#内部字段分隔符(Internal Field Separator, IFS)是shell中的一个重要概念</div><div class="line">#IFS的默认值为空白字符(换行符、制表符、空格)</div><div class="line">awk -F: &apos;&#123;print $1,$3&#125;&apos; /etc/passwd		#IFS=&quot;:&quot;</div><div class="line"></div><div class="line">#对一些列值进行迭代，循环非常有用</div><div class="line">for i in &#123;1..10&#125;</div><div class="line">do</div><div class="line">cmd</div><div class="line">done</div><div class="line"></div><div class="line">while condition</div><div class="line">do</div><div class="line">cmd</div><div class="line">done</div><div class="line"></div><div class="line">until condition</div><div class="line">do</div><div class="line">cmd</div><div class="line">done</div></pre></td></tr></table></figure>
<p><br></p>
<h2 id="比较与测试"><a href="#比较与测试" class="headerlink" title="比较与测试"></a>比较与测试</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div></pre></td><td class="code"><pre><div class="line">#程序中的流程控制是由比较和测试语句来处理的</div><div class="line">if condition1 || condition2</div><div class="line">then</div><div class="line">	cmd1</div><div class="line">elif condition3 &amp;&amp; condition4</div><div class="line">then</div><div class="line">	cmd2</div><div class="line">else</div><div class="line">	cmd3</div><div class="line">fi</div><div class="line"></div><div class="line">#算术比较</div><div class="line">if [ $num -ge 10 -a $num -lt 20 ]</div><div class="line"></div><div class="line">-eq</div><div class="line">-gt</div><div class="line">-ge</div><div class="line">-lt</div><div class="line">-le</div><div class="line">-a</div><div class="line">-o</div><div class="line"></div><div class="line">#文件系统相关</div><div class="line">if [ -f $file1 -o -x $file2]</div><div class="line"></div><div class="line">-x</div><div class="line">-w</div><div class="line">-r</div><div class="line">-f</div><div class="line">-d</div><div class="line">-e</div><div class="line">-b		#block</div><div class="line">-l</div><div class="line"></div><div class="line">#字符串比较</div><div class="line">[[ $str1 = $str2]]</div><div class="line"></div><div class="line">=		#=号旁有空格--是比较关系；=号旁没空格，是赋值语句</div><div class="line">!=</div><div class="line">&gt;</div><div class="line">&lt;</div><div class="line">-z		#空字符</div><div class="line">-n		#非空字符</div><div class="line"></div><div class="line">#使用test命令来执行条件检测</div><div class="line">if [ $num -eq 0 ]  -- if test $num -eq 0</div></pre></td></tr></table></figure>
<p><br><br><br></p>
<h1 id="命令之乐"><a href="#命令之乐" class="headerlink" title="命令之乐"></a>命令之乐</h1><h2 id="简介-1"><a href="#简介-1" class="headerlink" title="简介"></a>简介</h2><p>各种命令可谓Unix-Like系统中优美的部分，它能帮我们搞定各种繁杂的任务。<br>一旦你尝试过Linux提供的这些利器，你一定会感到惊讶：以前没有这些命令的时候，自己是什么熬过来的。<br>最钟爱的莫过于 <code>grep</code>, <code>awk</code>, <code>sed</code>, <code>find</code> 命令了！</p>
<p>本章将会为你介绍一些最有趣同时也是最实用的命令。</p>
<p><br></p>
<h2 id="用cat进行拼接"><a href="#用cat进行拼接" class="headerlink" title="用cat进行拼接"></a>用cat进行拼接</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">#cat命令通常用于读取、显示或拼接文件内容，不过它所具备的能力远不止此</div><div class="line">#cat(concatenate, 拼接)</div><div class="line">cat file1 file2 ···</div><div class="line">echo &quot;Ahaha&quot; | cat - file1 file2		#-指stdin文本文件名</div><div class="line"></div><div class="line">cat -s file3  -- cat file3 | tr -s &apos;\n&apos;		#压缩空白行</div><div class="line">cat -T test.py		#将制表符显示为 ^I, 避免制表符和连续空格误用, 产生错误缩进</div><div class="line">cat -n file4		#显示行号</div></pre></td></tr></table></figure>
<p><br></p>
<h2 id="录制与回放终端会话"><a href="#录制与回放终端会话" class="headerlink" title="录制与回放终端会话"></a>录制与回放终端会话</h2><p>当你需要准备一个命令行教程时，如果将我们输入命令后的一切按照先后次序记录下来，再进行回放，是不是很nice！<br>通过 <code>script</code>, <code>scriptreplay</code> 命令, 把终端会话记录到文件，并回放。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">#-t,将时间数据输出到标准错误； -a,追加输出</div><div class="line">script -t 2&gt; timing.log -a output.session		#两个文件随意取名, 如不将错误重定向会显示在屏幕上导致很乱</div><div class="line">输入命令</div><div class="line">cmd2</div><div class="line">···</div><div class="line">exit		#退出录制</div><div class="line"></div><div class="line">scriptreplay -t timing.log output.session		#播放</div></pre></td></tr></table></figure></p>
<p><br></p>
<h2 id="文件查找与文件列表"><a href="#文件查找与文件列表" class="headerlink" title="文件查找与文件列表"></a>文件查找与文件列表</h2><p><code>find</code> 是Unix/Linux命令行工具箱中最棒的工具之一。<br><code>find</code> 命令沿着文件层次结构向下遍历，匹配符合条件的文件，并执行相应的操作。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div></pre></td><td class="code"><pre><div class="line">#基于文件名及正则表达式搜索</div><div class="line">find /home/zhang		#列出/home/zhang目录及其子目录线所有文件和文件夹</div><div class="line">find /home/zhang -name &quot;*.txt&quot;</div><div class="line">find . -name &quot;*.sh&quot; -o -iname &quot;zhang*&quot;		#匹配多个</div><div class="line">find /home/zhang -path &quot;201710*&quot;		#-path将文件路径作为一个整体进行匹配</div><div class="line">find . -regex	&quot;.*\(\.txt|\.[0-9]+\)$&quot;		#匹配以.txt或数字结尾的文件</div><div class="line"></div><div class="line">#使用-maxdepth, -mindepth参数，来限制find的遍历深度</div><div class="line">#-type, 根据文件类型搜索。 f(普通文件)，d(目录)，b(块设备)，l(符号链接)，s(套接字)等</div><div class="line">find /home -maxdepth 1 -type f(d)		#参数顺序也会影响find的查找效率</div><div class="line"></div><div class="line">#根据文件类型搜索</div><div class="line">find /dev -type b		#查看/dev及其子目录下设备文件</div><div class="line">find / -maxdepth 1 -type l		#查找/下链接文件</div><div class="line"></div><div class="line">#根据文件时间进行搜索</div><div class="line">#Unix/Linux文件系统中的每一个文件都有三种时间戳(timestamp),-表示小于，+表示大于</div><div class="line">#Unix中并没有所谓的 &quot;创建时间&quot; 的概念</div><div class="line">#访问时间(-atime,以天为单位； -amin,以分钟为单位):用户最近一次访问文件时间；</div><div class="line">#修改时间(-mtime,以天为单位； -mmin,以分钟为单位):文件最后一次修改时间；</div><div class="line">#变化时间(-ctime,以天为单位； -cmin,以分钟为单位):文件元数据(如权限，所有权)最后一次变化时间；</div><div class="line">find /home/zhang -type f -mtime 7		#7天前被修改的普通文件</div><div class="line">find /home/zhang -type f -amin -10		#搜索10分钟内被修改的普通文件</div><div class="line">find . -type f -newer file1.txt		#找出比file1.txt新的文件</div><div class="line"></div><div class="line">#基于文件大小的搜索</div><div class="line">#b(块，512字节), c(字节), w(字，2字节), k(千字节), M(兆字节), G(吉字节)</div><div class="line">find . -type -f -size +100k</div><div class="line"></div><div class="line">#删除匹配的文件</div><div class="line">find . -type f -name &quot;*.swp&quot; -delete</div><div class="line"></div><div class="line">#基于文件权限和所有权的匹配</div><div class="line">find . -type f -perm 644</div><div class="line">find /var/apache -type f -name &quot;*.php&quot; -perm 644		#搜索基于权限的文件</div><div class="line">find /var -maxdepth 2 -type f -user zhang		#搜索基于用户的文件</div><div class="line"></div><div class="line">#执行命令或动作</div><div class="line">#find命令可以借助-exec与其他命令进行结合</div><div class="line">#&#123;&#125;是一个特殊字符串，将替换为相应文件名</div><div class="line">find . -type f -perm 764 -user zhang -exec chmod 644 &#123;&#125; \;		#将所属用户zhang，权限764的文件权限修改为644</div><div class="line">find . -type f -mmin +30 -name &quot;*.txt&quot; -exec cp &#123;&#125; &#123;&#125;.old \;		#复制最近30内修改的名字为.txt的文件</div><div class="line"></div><div class="line">#-exec结合多个命令</div><div class="line">#我们无法在-exec参数中直接使用多个命令，不过我们可以把多个命令写到一个shellscript中，然后执行</div><div class="line">-exec ./test.sh &#123;&#125; \;</div><div class="line">find . -type f -name &quot;*.sh&quot; -mmin -10 -exec sh &#123;&#125; \;</div><div class="line"></div><div class="line">#让find跳过特定目录</div><div class="line">-prune</div></pre></td></tr></table></figure></p>
<p><br></p>
<h2 id="玩转xargs"><a href="#玩转xargs" class="headerlink" title="玩转xargs"></a>玩转xargs</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line">#xargs能够处理stdin并将其转换为特定命令的命令行参数</div><div class="line">#也可以将单行或多行输入文本转换成其他格式(如多行变单行)</div><div class="line">cmd | xargs</div><div class="line"></div><div class="line">#将多行输入转换为单行输出</div><div class="line">echo -e &quot;1\n2\n3&quot; | xargs	#将换行符替换为空格</div><div class="line">#将单行输入转换成多行输出</div><div class="line">echo &quot;1 2 3&quot; | xargs -n 1	#每行一个参数</div><div class="line">echo &quot;hahaZhahaZhahaZhaha&quot; | xargs -n 2 -d Z	#-d指定分隔符</div><div class="line"></div><div class="line">#读取stdin，将格式化参数传递给命令</div><div class="line">cat test.txt | xargs -n 1 ./zhang.sh	#zhang.sh arg1; zhang.sh arg2... 每次提供一个参数</div><div class="line">cat test.txt | xargs -n X ./zhang.sh	#X为参数个数，一次提供全部参数</div><div class="line"></div><div class="line">#指定替换字符串</div><div class="line">cat test.txt | xargs -I &#123;&#125; ./zhang.sh &#123;&#125;</div><div class="line"></div><div class="line">#结合find使用xargs</div><div class="line">find . -type f -name &quot;*.txt&quot; -print0 | xargs -0 ls	#-print0无换行shuchu, -0将\0作为输入界定符</div><div class="line"></div><div class="line">#统计某文件行数</div><div class="line">find /path -type f -name &quot;*.c&quot; -print0 | xargs -0 wc -l</div><div class="line"></div><div class="line">#结合stdin，运用while和子shell</div><div class="line">cat file.txt | while read arg; do cat $arg; done == cat file.txt | xargs - &#123;&#125; cat &#123;&#125;</div><div class="line">cmd0 | (cmd1; cmd2; cmd3) | cmd4	#子shell</div></pre></td></tr></table></figure>
<p><br></p>
<h2 id="用tr进行转换"><a href="#用tr进行转换" class="headerlink" title="用tr进行转换"></a>用tr进行转换</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div></pre></td><td class="code"><pre><div class="line">#tr - translate or delete characters</div><div class="line">#tr命令经常用来编写优美的单行命令</div><div class="line">#tr可对来自stdin的字符 进行替换、删除以及压缩</div><div class="line"></div><div class="line">echo &quot;AH WONDERFUL&quot; | tr &apos;A-Z&apos; &apos;a-z&apos;	#转换大小写</div><div class="line">echo &quot;AH WONDERFUL&quot; | tr &apos;A-Z&apos; &apos;a-b&apos; --&gt; ab bbbbbbbbb</div><div class="line">#tr [option] set1 set2</div><div class="line">#如果两个字符集长度不相等，那么set2会不断重复其最后一个字符，直到长度与set1相同</div><div class="line"></div><div class="line">echo 12345 | tr &apos;0-9&apos; &apos;9876543210&apos;	#数字加密</div><div class="line">echo 87654 | tr &apos;9876543210&apos; &apos;0-9&apos;	#数字解密</div><div class="line"></div><div class="line">echo &apos;He is a cool boy, and she is a beautiful girl&apos; | tr &apos;A-Za-z&apos; &apos;NOPQRSRUVWXYZABCDEFGHIJKLMnopqrstuvwxyzabcdefghijklm&apos;	#加密</div><div class="line">echo &apos;Ur vf n pbby obl, naq fur&apos; | tr &apos;NOPQRSRUVWXYZABCDEFGHIJKLMnopqrstuvwxyzabcdefghijklm&apos; &apos;A-Za-z&apos;	#解密</div><div class="line"></div><div class="line">cat 1.txt | tr &apos;\t&apos; &apos; &apos;	#将制表符转换为空格</div><div class="line"></div><div class="line">#删除字符</div><div class="line">echo &quot;Hello 530 World&quot; | tr -d &apos;0-9&apos;	#-d删除，删除数字</div><div class="line">Hello  World</div><div class="line">echo &quot;Hello 520 World&quot; | tr -d -c &apos;0-9&apos;	#-c补集</div><div class="line"> 520 </div><div class="line"></div><div class="line">#压缩字符，将连续的重复字符压缩为单个字符</div><div class="line">echo &quot;GNU&apos;s    not   Unix&quot; | tr -s &apos; &apos;	#-s压缩，压缩空格</div><div class="line">GNU&apos;s not Unix</div><div class="line"></div><div class="line">echo -e &quot;1\n2\n3\n4\n5&quot; &gt; sum.txt</div><div class="line">cat sum.txt | echo $[ $(tr &apos;\n&apos; &apos;+&apos;) 0 ] -- echo $[1+2+3+4+5+0]</div><div class="line"></div><div class="line">#tr字符类</div><div class="line">\a	终端鸣响</div><div class="line">\b	退格</div><div class="line">\f	换页</div><div class="line">\n	换行</div><div class="line">\r	回车</div><div class="line">\t	水平制表符</div><div class="line">\v	垂直制表符</div><div class="line">string1-stringN	#从字符1到字符N升序过程中的所有字符</div><div class="line">[字符*次数]</div><div class="line">[:alnum:]	#所有字母和数字</div><div class="line">[:alpha:]	#所有字母</div><div class="line">[:digit:]	#所有数字</div><div class="line">[:lower:]	#所有小写字母</div><div class="line">[:upper:]	#所有大写字母</div><div class="line">[:graph:]	#所有可打印字符，不含空格</div><div class="line">[:print:]	#所有可打印字符，包含空格</div><div class="line">[:blank:]	#所有水平排列的空白字符</div><div class="line">[:cntrl:]	#所有控制字符</div><div class="line">[:punct:]	#所有标点字符</div><div class="line">[:space:]	#所有空白字符</div><div class="line">[:xdigit:]	#所有十六进制数</div><div class="line">[=字符]	#指定字符</div></pre></td></tr></table></figure>
<p><br></p>
<h2 id="校验和-与-核实文件完整性"><a href="#校验和-与-核实文件完整性" class="headerlink" title="校验和 与 核实文件完整性"></a>校验和 与 核实文件完整性</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">#校验和(checksum)程序从文件中生成校验和密钥，然后利用校验和密钥核实文件的完整性</div><div class="line">#校验和对于编写备份脚本或系统维护脚本非常重要，因为它们都会涉及通过网络传输文件</div><div class="line">#通过使用校验和核实，我们就可以识别那些在网络传输过程中出现损坏的文件，并重传，从而确保数据完整性</div><div class="line">#校验和对于核实数据完整性非常有用</div><div class="line">#广泛使用的校验和技术有：md5sum, sha1sum</div><div class="line"></div><div class="line">#对单个文件进行校验</div><div class="line">md5sum sum.txt &gt; sum.md5</div><div class="line">#302c28003d487124d97c242de94da856  sum.txt</div><div class="line">md5sum -c sum.md5	#-c检查</div><div class="line">#sum.txt: 确定</div><div class="line"></div><div class="line">#对目录进行校验</div><div class="line">#对目录计算校验和意味着我们需要对目录中的所有文件以递归的方式进行计算</div><div class="line">yum install -y md5deep</div><div class="line">md5deep -r ./dir &gt; dir.md5	#recursive递归</div><div class="line">md5sum -c dir.md5</div><div class="line"></div><div class="line">#可以将测试dir下某个文件更改一下，校验的时候会报错</div></pre></td></tr></table></figure>
<p><br></p>
<h2 id="排序、单一、重复"><a href="#排序、单一、重复" class="headerlink" title="排序、单一、重复"></a>排序、单一、重复</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line">#sort - 对文本文件进行行排序</div><div class="line">#uniq - 删除排序文件中的重复行</div><div class="line"></div><div class="line">echo -e &quot;333\n1&quot; &gt; 1.txt; echo -e &quot;22\n22&quot; &gt; 2.txt</div><div class="line">sort 1.txt 2.txt -o ./soredt.txt</div><div class="line">#1</div><div class="line">#22</div><div class="line">#22</div><div class="line">#333</div><div class="line">cat sortec.txt | uniq</div><div class="line">#1</div><div class="line">#22</div><div class="line">#333</div><div class="line"></div><div class="line">sort -n	#按数字进行排序</div><div class="line">sort -r	#逆向排序</div><div class="line">sort -M	#按月份排序</div><div class="line">sort -C	#检查是否排序</div><div class="line">sort -b	#忽略空白</div><div class="line"></div><div class="line">#依据键或列进行排序</div><div class="line">sort -k 2 data.txt	#依据第二列来排序</div><div class="line"></div><div class="line"></div><div class="line">#uniq要么使用管道，要么使用排过序的文件作文输入</div><div class="line">uniq -u sorted.txt	#只显示唯一的行(即没有重复出现的行)</div><div class="line">uniq -d sorted.txt	#只显示重复的行</div><div class="line">uniq -s 2 -w 2 sorted.txt	#-s忽略前2个字符，-w指定用于比较的最大字符数</div></pre></td></tr></table></figure>
<p><br></p>
<h2 id="临时文件命名、随机数"><a href="#临时文件命名、随机数" class="headerlink" title="临时文件命名、随机数"></a>临时文件命名、随机数</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">#在编写shell脚本时，我们经常需要存储临时文件。最适合存储临时数据的位置是 /tmp</div><div class="line">#/tmp目录中的内容会在系统重启后被清空</div><div class="line"></div><div class="line">filename=$RANDOM	#RANDOM返回一个随机数</div><div class="line">filename2=$$	#当前shell的PID</div><div class="line">filename3=$((date +%F))	#通过日期命令</div></pre></td></tr></table></figure>
<p><br></p>
<h2 id="分割文件和数据"><a href="#分割文件和数据" class="headerlink" title="分割文件和数据"></a>分割文件和数据</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">#某些情况下，需要把文件分割成多个更小的片段</div><div class="line">dd if=/dev/zero bs=100k count=1 of=./data.file	#生成一个大小100k内容全是0的文件</div><div class="line">split -b 20k data.file	#-d指定分割大小</div><div class="line">#data.file xaa xab xac xad xae,这五个文件都为20k</div><div class="line">#我测试了一下，几个文件加起来数据没变，几个文件总行数没变</div><div class="line">#单位有 k, m, G, c(byte), w(word)</div><div class="line">#-d以数字为后缀， -a指定后缀长度</div><div class="line"></div><div class="line">split data.file -b 20k -d -a 2 spt	#增加前缀名&apos;spt&apos;</div><div class="line">#data.file  spt00  spt01  spt02  spt03  spt04</div><div class="line"></div><div class="line">split -l 10 data.file	#-l按行数来分割文件</div><div class="line">#split只能根据大小或行数分割文件</div><div class="line"></div><div class="line">#csplit可以根据文件本身特点进行分割</div><div class="line">-f	#指定分割后文件前缀</div><div class="line">-n	#指定分割后文件后缀数字个数</div><div class="line">-b	#指定后缀格式</div></pre></td></tr></table></figure>
<p><br></p>
<h2 id="根据扩展名切分文件名"><a href="#根据扩展名切分文件名" class="headerlink" title="根据扩展名切分文件名"></a>根据扩展名切分文件名</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">#借助%操作符将名称从 “名称.扩展名” 格式中提取出来</div><div class="line"></div><div class="line">file=&quot;zhang.txt&quot;</div><div class="line">name1=$&#123;file%.*&#125;	#删除位于%右侧的通配符(.*)所匹配的字符串，通配符从右向左进行匹配</div><div class="line">#zhang</div><div class="line">#*号通配符，.号</div><div class="line">#%属于非贪婪匹配(non-greedy),它会匹配通配符最短结果</div><div class="line">#%%属于贪婪匹配(greedy)，它会匹配符号条件的最长字符串</div><div class="line"></div><div class="line">name2=$&#123;file#*.&#125;	#删除位于#右侧的通配符(*.)所匹配的字符串，通配符从左向右进行匹配</div><div class="line">#txt</div><div class="line"># #属于非贪婪匹配</div><div class="line"># ##属于贪婪匹配</div><div class="line"></div><div class="line"></div><div class="line">#栗子</div><div class="line">URL=“www.google.com”</div><div class="line">echo $&#123;URL%.*&#125;	#非贪婪匹配，移除最右边.及其后面内容</div><div class="line">www.google</div><div class="line">echo $&#123;URL%%.*&#125;	#贪婪匹配</div><div class="line">www</div><div class="line">echo $&#123;URL#*.&#125;	#非贪婪匹配，移除最左边.及其前面内容</div><div class="line">google.com</div><div class="line">echo $&#123;URL##*.&#125;	#贪婪匹配</div><div class="line">com</div></pre></td></tr></table></figure>
<p><br></p>
<h2 id="批量重命名和移动"><a href="#批量重命名和移动" class="headerlink" title="批量重命名和移动"></a>批量重命名和移动</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">#综合运用find、rename、mv命令</div></pre></td></tr></table></figure>
<p><br></p>
<h2 id="拼写检查与词典操作"><a href="#拼写检查与词典操作" class="headerlink" title="拼写检查与词典操作"></a>拼写检查与词典操作</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">#Linux大多数发行版都含有一份词典文件，另外还有一个被称为aspell的拼写检查命令</div><div class="line">#words --&gt; /usr/share/dict/linux.words</div><div class="line"></div><div class="line">grep &quot;^good&quot; /usr/share/dict/linux.words</div><div class="line"></div><div class="line">aspell</div></pre></td></tr></table></figure>
<p><br></p>
<h2 id="交互输入自动化"><a href="#交互输入自动化" class="headerlink" title="交互输入自动化"></a>交互输入自动化</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#写一个读取交互式输入脚本</span></div><div class="line">vi jiaohu.sh</div><div class="line"></div><div class="line"><span class="meta">#!/bin/bash</span></div><div class="line"><span class="built_in">read</span> -p <span class="string">"Input a number:"</span> num</div><div class="line"><span class="built_in">read</span> -p <span class="string">"Input name:"</span> name</div><div class="line"><span class="built_in">echo</span> <span class="string">"You have enterd number:<span class="variable">$num</span>, name:<span class="variable">$name</span>"</span></div><div class="line"></div><div class="line"><span class="built_in">echo</span> -e <span class="string">"1\nzhang"</span> | ./jiaohu.sh</div><div class="line">You have entered number:1, name:hello</div><div class="line"></div><div class="line"><span class="comment">#or</span></div><div class="line"><span class="built_in">echo</span> -e <span class="string">"1\nzhang"</span> &gt; input.txt</div><div class="line">./jiaohu.sh &lt; input.txt</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">#交互式输入自动化</span></div><div class="line"><span class="comment">#用expect实现自动化</span></div><div class="line">yum install -y expect</div><div class="line">vim auto_expect.sh</div><div class="line"></div><div class="line"><span class="comment">#!/bin/expect</span></div><div class="line">spawn ./jiaohu.sh	<span class="comment">#spawn指定需要自动化哪一个命令</span></div><div class="line">expect <span class="string">"Input a number:"</span>	<span class="comment">#expect提供需要等待的消息</span></div><div class="line">send <span class="string">"1\n"</span>		<span class="comment">#send是要发送的消息</span></div><div class="line">expect <span class="string">"Input name:"</span></div><div class="line">send <span class="string">"zhang"</span></div><div class="line">expect eof	<span class="comment">#expect eof指明命令交互结束</span></div><div class="line"></div><div class="line">./auto_expect.sh</div></pre></td></tr></table></figure>
<p><br><br><br></p>
<h1 id="以文件之名"><a href="#以文件之名" class="headerlink" title="以文件之名"></a>以文件之名</h1><h2 id="简介-2"><a href="#简介-2" class="headerlink" title="简介"></a>简介</h2><p>Unix将操作系统中的一切都视为文件。</p>
<p><br></p>
<h2 id="生成任意大小的文件"><a href="#生成任意大小的文件" class="headerlink" title="生成任意大小的文件"></a>生成任意大小的文件</h2><p>由于各种原因，可能需要生成一个包含随机数据的文件。</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#dd命令会克隆给定的输入内容，然后将一模一样的副本写到输出</span></div><div class="line"><span class="comment">#如果不指定if，dd会从stdin中读取输入；如果不指定of，dd会输出到stdout</span></div><div class="line"><span class="comment">#/dev/zero是一个字符设备，它会不断返回0值字节(\0)</span></div><div class="line">dd <span class="keyword">if</span>=/dev/zero of=junk.data bs=1M count=1</div></pre></td></tr></table></figure>
<p><br></p>
<h2 id="文本文件的交集与差集"><a href="#文本文件的交集与差集" class="headerlink" title="文本文件的交集与差集"></a>文本文件的交集与差集</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#comm命令用于两个文件之间的比较</span></div><div class="line"><span class="comment">#交集(intersection),差集(set difference), 求差</span></div><div class="line"><span class="comment">#comm必须使用排过序的文件作为输入</span></div><div class="line"></div><div class="line"><span class="built_in">echo</span> -e <span class="string">"1\n2\n3"</span> &gt; A.txt &amp;&amp; <span class="built_in">echo</span> -e <span class="string">"3\n2\n3"</span> &gt; B.txt</div><div class="line">sort -n A.txt -o A.txt &amp;&amp; sort -n B.txt -o B.txt</div><div class="line">comm A.txt B.txt</div><div class="line"><span class="comment">#输出第一列为A独有，第二列为B独有，第三列为交集</span></div><div class="line"></div><div class="line">comm A.txt B.txt -1 -2</div><div class="line"><span class="comment">#-1从输出中删除第一列，-2删除第二列，-3删除第三列</span></div></pre></td></tr></table></figure>
<p><br></p>
<h2 id="查找并删除重复文件"><a href="#查找并删除重复文件" class="headerlink" title="查找并删除重复文件"></a>查找并删除重复文件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">#重复文件指的是那些虽然名字不同但内容却一模一样的文件</div><div class="line"></div><div class="line">ls -lS	#以文件大小排序，识别大小相等的文件</div><div class="line">md5sum	#接下来计算这些文件的校验和</div></pre></td></tr></table></figure>
<h2 id="创建长路径目录"><a href="#创建长路径目录" class="headerlink" title="创建长路径目录"></a>创建长路径目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mkdir -p /home/zhang/1/22/333 2&gt;/dev/null</div></pre></td></tr></table></figure>
<p><br></p>
<h2 id="文件权限、所有权和粘滞位"><a href="#文件权限、所有权和粘滞位" class="headerlink" title="文件权限、所有权和粘滞位"></a>文件权限、所有权和粘滞位</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line">#用户(user)，用户组(group)，其他用户(other)</div><div class="line">ll ./*</div><div class="line">#d目录，c字符设备，b块设备，l符号链接，s套接字，p管道，-普通文件</div><div class="line"></div><div class="line">#用户还有一个称为setuid(S)的特殊权限，它出现在用户的x位置</div><div class="line">#setuid权限允许用户以其拥有者的权限来执行可执行文件，即便这个文件是由其他用户运行的</div><div class="line">-rwSrw-r--</div><div class="line"></div><div class="line">#组也拥有一个setgid(S)权限，它出现在组的x位置</div><div class="line">#它允许以同该目录拥有者所在组相同的有效组权限来运行可执行文件</div><div class="line">-rwxrwSr--</div><div class="line"></div><div class="line">#目录有一个特殊权限，叫做粘滞位(sticky bit)(T或t)，出现在其他用户的x位置</div><div class="line">#当一个目录设置了粘滞位，只有创建该目录的用户才能删除目录中的文件,即便group和other有w权限</div><div class="line">-rwxr--rwT</div><div class="line"></div><div class="line">chmod u=rwx g=rw o=r file1</div><div class="line">chmod u+x g-w file2</div><div class="line">chmod 744 file3</div><div class="line"></div><div class="line">chmod a+x . -R	#以递归方式设置权限</div><div class="line">chown user.group . -R	#以递归方式设置所有权</div><div class="line"></div><div class="line">chmod a+t dir1	#设置粘滞位</div><div class="line"></div><div class="line">chmod +s fiel4</div><div class="line">chown root.root file4</div><div class="line">chmod +s file4</div><div class="line">./file4	#每次file4都是以root运行</div><div class="line"></div><div class="line">#setuid的使用不是无限制的，它只能应用在Linux ELF格式二进制，而不能用于脚本文件。</div></pre></td></tr></table></figure>
<p><br></p>
<h2 id="创建不可修改文件"><a href="#创建不可修改文件" class="headerlink" title="创建不可修改文件"></a>创建不可修改文件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">#不可修改(immutable),是保护文件不被修改的安全手段之一。</div><div class="line">#一旦文件被设置为不可修改，任何用户(包括root)都不能修改，除非将其不可修改属性移除</div><div class="line"></div><div class="line">chattr	#修改文件在Linux第二扩展文件系统(E2fs)上的特有属性</div><div class="line">chattr +i file1	#这样就无法删除file1</div><div class="line">chattr -i file1</div></pre></td></tr></table></figure>
<p><br></p>
<h2 id="批量生成空白文件"><a href="#批量生成空白文件" class="headerlink" title="批量生成空白文件"></a>批量生成空白文件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">#touch命令可用来生成空白文件，如果文件存在，则可以用它修改文件的时间戳</div><div class="line">for name in &#123;1..100&#125;.txt;do</div><div class="line">touch $name</div><div class="line">done</div><div class="line"></div><div class="line">touch -a/-m	#更改文件访问/修改时间</div><div class="line">touch -d &quot;Thu Oct 31 14:20:13 CST 2017&quot; file1	#指定特定时间戳</div></pre></td></tr></table></figure>
<p><br></p>
<h2 id="查找符号链接及其指向目标"><a href="#查找符号链接及其指向目标" class="headerlink" title="查找符号链接及其指向目标"></a>查找符号链接及其指向目标</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">#符号链接(软链接)只不过是指向其他文件的指针</div><div class="line">ln -s /usr/bin /bin</div><div class="line">ls -l / | grep &quot;^l&quot;</div><div class="line">find / -maxdepth 1 -type l</div><div class="line"></div><div class="line">readlink /bin	#找出链接目标</div></pre></td></tr></table></figure>
<p><br></p>
<h2 id="列举文件类型统计信息"><a href="#列举文件类型统计信息" class="headerlink" title="列举文件类型统计信息"></a>列举文件类型统计信息</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">#在Unix/Linux系统中，文件类型并不是由文件扩展名决定的</div><div class="line">file /etc/passwd</div><div class="line">file -b /etc/passwd</div></pre></td></tr></table></figure>
<p><br></p>
<h2 id="环回文件与挂载"><a href="#环回文件与挂载" class="headerlink" title="环回文件与挂载"></a>环回文件与挂载</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">#环回文件系统是指那些在文件中而非物理设备中创建的文件系统</div><div class="line">dd if=/dev/zero of=loopback.file bs=1G count=1</div><div class="line">mkfs.ext4 loopback.file</div><div class="line">mount -o loop loopback.file /mnt/loopback	#-o loop来挂载环回文件</div><div class="line">df -h</div><div class="line">umount /mnt/loopback</div><div class="line"></div><div class="line">#将ISO文件作为环回文件挂载</div><div class="line">mount -o loop linux.iso /mnt/iso</div></pre></td></tr></table></figure>
<p><br></p>
<h2 id="生成ISO文件以及混合ISO"><a href="#生成ISO文件以及混合ISO" class="headerlink" title="生成ISO文件以及混合ISO"></a>生成ISO文件以及混合ISO</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">#可引导光盘自身具备引导能力，也可以运行操作系统或其他软件。不可引导光盘则做不到这些。</div><div class="line">cat /dev/cdrom  &gt; /dev/sdc	#sdc指U盘</div><div class="line">dd if=/dev/cdrom of=/dev/sdc	#将ISO写入usb存储设备</div><div class="line">mkisofs -V &quot;Label&quot; -o /dev/sdc /dev/cdrom</div><div class="line"></div><div class="line">cdrecord -v dev=/dev/cdrom image.iso</div></pre></td></tr></table></figure>
<p><br></p>
<h2 id="查找文件差异并进行修补"><a href="#查找文件差异并进行修补" class="headerlink" title="查找文件差异并进行修补"></a>查找文件差异并进行修补</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">#补丁文件(patch file)</div><div class="line">#diff命令可以生成差异文件</div><div class="line">diff -u file1 file2	#一体化形式输出</div><div class="line">diff -u file1 file2 &gt; diff.patch</div><div class="line">patch -p1 file1 &lt; diff.patch	#得到file2</div><div class="line">patch -p1 file2 &lt; diff.patch	#得到file1</div><div class="line">patch -R file1 &lt; diff.patch; patch -R file2 &lt; diff.patch	#还原</div><div class="line"></div><div class="line">#diff也能够以递归的形式作用于目录，它对目录中所有内容生成差异输出</div><div class="line">diff -Naur dir1 dir2</div><div class="line">#-N将所有确实文件视为空文件， -a将所有文件视为文本文件</div><div class="line">#-u生成一体化输出， -r遍历目录下所有文件</div></pre></td></tr></table></figure>
<p><br></p>
<h2 id="head与tail"><a href="#head与tail" class="headerlink" title="head与tail"></a>head与tail</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">head file1; tail file1	#head与tail默认打印10行</div><div class="line">head -n 5 file1; tail -n 6 file1	#指定行数</div><div class="line">head -n -5 file1	#打印除了最后5行外所有行</div><div class="line">tail -n +(5+1) file1	#打印除了开始5行外所有行</div><div class="line"></div><div class="line">tail -f /var/log/nginx/access.log	#--follow，动态关注文件</div></pre></td></tr></table></figure>
<p><br></p>
<h2 id="只列出目录的其他方法"><a href="#只列出目录的其他方法" class="headerlink" title="只列出目录的其他方法"></a>只列出目录的其他方法</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">ls -d .</div><div class="line">ls -l . | grep &quot;^d&quot;</div><div class="line">ls -F . | grep &quot;/$&quot;</div><div class="line">find . -maxdepth 1 -type d</div></pre></td></tr></table></figure>
<p><br></p>
<h2 id="pushd和popd"><a href="#pushd和popd" class="headerlink" title="pushd和popd"></a>pushd和popd</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">#在命令行中使用pushd和popd快速定位，pushd和popd以栈的方式运作</div><div class="line">#当没有鼠标时，复制粘贴就不怎么实用了</div><div class="line">#pushd和popd可以用于在多个目录之间进行切换而无需复制并粘贴目录路径</div><div class="line"></div><div class="line">pushd /home/user1; pushd /home/user2; pushd /home/user3	#将路径添加到栈</div><div class="line">pushd +2	#切换到/home/user3</div><div class="line"></div><div class="line">popd	#移除最近添加入栈的目录</div><div class="line"></div><div class="line">cd /root; cd /home/user</div><div class="line">cd -	#回到上次的目录</div><div class="line">cd ..	#切换到上一级目录</div><div class="line">cd ~	#切换到用户主目录</div></pre></td></tr></table></figure>
<p><br></p>
<h2 id="统计文件的行数、单词数、字符数"><a href="#统计文件的行数、单词数、字符数" class="headerlink" title="统计文件的行数、单词数、字符数"></a>统计文件的行数、单词数、字符数</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">#wc(word count)，是一个统计工具</div><div class="line">wc -l file1	#统计行数</div><div class="line">wc -w file1	#统计单词数</div><div class="line">wc -c file	#统计字符数</div><div class="line">wc -L file	#打印最长行长度</div><div class="line">wc file1	#行、单词、字符数</div></pre></td></tr></table></figure>
<p><br></p>
<h2 id="目录树"><a href="#目录树" class="headerlink" title="目录树"></a>目录树</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">#tree命令是以图形化的树状结构打印文件和目录,在Linux发行版中默认未安装</div><div class="line">yum install -y tree</div><div class="line">tree /home/zhang</div><div class="line">tree /home/zhang -P &quot;*.sh&quot;	#只标记出.sh文件</div><div class="line">tree /home/zhang -I &quot;*.sh&quot;	#标记出除.sh文件外所有文件</div><div class="line">tree /home/zhang -h	#显示大小</div><div class="line"></div><div class="line">tree /home/zhang -H http://localhost -o tree.html	#以html形式输出目录树</div></pre></td></tr></table></figure>
<p><br><br><br></p>
<h1 id="让文本飞"><a href="#让文本飞" class="headerlink" title="让文本飞"></a>让文本飞</h1><h2 id="简介-3"><a href="#简介-3" class="headerlink" title="简介"></a>简介</h2><p>shell脚本可以将<code>sed</code>, <code>awk</code>, <code>grep</code>, <code>cut</code>等这类优美的工具组合在一起，用于解决文本处理相关问题。</p>
<p><br></p>
<h2 id="正则表达式"><a href="#正则表达式" class="headerlink" title="正则表达式"></a>正则表达式</h2><p>正则表达式是一种用于文本匹配的形式小巧、具有高度针对性的编程语言。只依靠通配符技术，能够匹配的文本范围相当有限。<br></p>
<p><strong>正则表达式基本组成</strong></p>
<table>
<thead>
<tr>
<th>正则表达式</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>^</td>
<td>行起始标记</td>
</tr>
<tr>
<td>$</td>
<td>行尾标记</td>
</tr>
<tr>
<td>.</td>
<td>匹配任意一个字符</td>
</tr>
<tr>
<td>[]</td>
<td>匹配包含在[]中的任意一个字符</td>
</tr>
<tr>
<td>[^]</td>
<td>匹配出[^]之外任意一个字符</td>
</tr>
<tr>
<td>[-]</td>
<td>匹配[]中范围内的任意一个字符</td>
</tr>
<tr>
<td>？</td>
<td>重复0或1次</td>
</tr>
<tr>
<td>+</td>
<td>重复&gt;=1次</td>
</tr>
<tr>
<td>*</td>
<td>重复&gt;=0次</td>
</tr>
<tr>
<td>()</td>
<td>创建一个用于匹配的子串</td>
</tr>
<tr>
<td>{n}</td>
<td>重复n次</td>
</tr>
<tr>
<td>{n, }</td>
<td>重复&gt;=n次</td>
</tr>
<tr>
<td>{n,m}</td>
<td>重复n到m次</td>
</tr>
<tr>
<td>\</td>
<td>转义字符</td>
</tr>
<tr>
<td>竖线l</td>
<td>匹配竖线l两边任意一项</td>
</tr>
</tbody>
</table>
<p><br><br><strong>POSIX字符类</strong></p>
<p>POSIX字符类(POSIX character class),是一个形如[:…:]的特殊元序列，它用于匹配特定的字符范围。<br></p>
<table>
<thead>
<tr>
<th>正则表达式</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>[:alnum:]</td>
<td>字母与数字字符</td>
</tr>
<tr>
<td>[:alpha:]</td>
<td>字母字符</td>
</tr>
<tr>
<td>[:blank:]</td>
<td>空格与制表符</td>
</tr>
<tr>
<td>[:digit:]</td>
<td>数字字符</td>
</tr>
<tr>
<td>[:lower:]</td>
<td>小写字母</td>
</tr>
<tr>
<td>[:upper:]</td>
<td>大写字母</td>
</tr>
<tr>
<td>[:punct:]</td>
<td>标点符号</td>
</tr>
<tr>
<td>[:space:]</td>
<td>所有空白字符</td>
</tr>
</tbody>
</table>
<p><br><br><strong>元字符</strong></p>
<p>元字符(meta character)，是一种Perl风格的正则表达式，只有一部分文本处理工具支持它。<br></p>
<table>
<thead>
<tr>
<th>正则表达式</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>\b</td>
<td>单词边界</td>
</tr>
<tr>
<td>\B</td>
<td>非单词边界</td>
</tr>
<tr>
<td>\d</td>
<td>单个数字字符</td>
</tr>
<tr>
<td>\D</td>
<td>单个非数字字符</td>
</tr>
<tr>
<td>\w</td>
<td>单个单词字符(数字，字母和_)</td>
</tr>
<tr>
<td>\W</td>
<td>单个非单词字符</td>
</tr>
<tr>
<td>\s</td>
<td>单个空白字符</td>
</tr>
<tr>
<td>\S</td>
<td>单个非空白字符</td>
</tr>
<tr>
<td>\n</td>
<td>换行符</td>
</tr>
<tr>
<td>\r</td>
<td>回车</td>
</tr>
</tbody>
</table>
<p><br><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">#匹配一个ipv4地址</div><div class="line">[0-9]&#123;1,3&#125;\.[0-9]&#123;1,3&#125;\.[0-9]&#123;1,3&#125;\.[0-9]&#123;1,3&#125;</div><div class="line"></div><div class="line">#匹配一个邮箱地址</div><div class="line">[\w]+@[\w]\.com</div></pre></td></tr></table></figure></p>
<p><br></p>
<h2 id="用grep在文件中搜索文本"><a href="#用grep在文件中搜索文本" class="headerlink" title="用grep在文件中搜索文本"></a>用grep在文件中搜索文本</h2><p><code>grep</code>命令是Unix中用于文本搜索的工具，它能够接受正则表达式和通配符。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">grep &quot;匹配文本/通配符&quot; file1 file2... --color=auto	#重点标记匹配</div><div class="line">grep -E &quot;正则表达式&quot; file</div><div class="line">egrep &quot;正则&quot; file</div><div class="line"></div><div class="line">grep -v	#反向匹配</div><div class="line">grep -c	#统计匹配行数</div><div class="line">grep -n	#打印出匹配的行号</div><div class="line">grep -o	#唯一匹配</div><div class="line">grep -l	&quot;匹配&quot; file1 file2	#返回匹配的文件名</div><div class="line">grep -R	#递归匹配</div><div class="line">grep -i	#忽略大小写</div><div class="line">grep -e &quot;匹配1&quot; -e &quot;匹配2&quot;	#匹配多个样式</div><div class="line">grep -f match.txt file1	#从match.txt文件读取匹配</div><div class="line">grep &quot;匹配&quot; --include=*.&#123;sh,txt&#125; --exclude=*.log --exclude-dir=/home/user -r /home	#包括或排除文件</div><div class="line">-A/-B n	#输出匹配 之后/之前 n行</div><div class="line">-c n	#输出匹配 前后 n行</div></pre></td></tr></table></figure></p>
<p><br></p>
<h2 id="用cut按列切分文件"><a href="#用cut按列切分文件" class="headerlink" title="用cut按列切分文件"></a>用cut按列切分文件</h2><p><code>cut</code>是一个将文本按列进行切分的小工具，它也可以指定每列定界符。在cut的术语中，每列都是一个字段。<br></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">#制表符&apos;\t&apos; 是cut默认的定界符</div><div class="line">cut -d&apos; &apos; -f1 1.txt	#-d指定分隔符，-f打印第几个字段</div><div class="line">cut -f1,2,3	#打印1,2，3列</div><div class="line">-c字符；	-b字节；</div><div class="line">cut -c 1-5 1.txt	#打印1-5字符</div><div class="line">cut -c -2 1.txt	#打印前2个字符</div><div class="line">cut -c 3-	#打印第3个字符到行尾</div></pre></td></tr></table></figure>
<p><br></p>
<h2 id="统计特定文件词频"><a href="#统计特定文件词频" class="headerlink" title="统计特定文件词频"></a>统计特定文件词频</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">#单词解析可以用 关联数组,正则表达式配合sed,awk,grep等工具来完成</div><div class="line">#关联数组中，将单词作为数组索引，单词次数作为数组值</div><div class="line">egrep -o &quot;\b[:alpha:]+\b&quot;	#匹配单词</div></pre></td></tr></table></figure>
<p><br></p>
<h2 id="sed入门"><a href="#sed入门" class="headerlink" title="sed入门"></a>sed入门</h2><p><code>sed</code>是stream editor(流编辑器)的缩写，它是文本处理中非常重要的工具。能够完美地配合正则表达式使用。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div></pre></td><td class="code"><pre><div class="line">#sed - stream editor for filtering and transforming text</div><div class="line">#字符/在sed中最为定界符使用</div><div class="line"></div><div class="line">#替换</div><div class="line">#sed &apos;s/匹配样式/替代字符串/&apos;</div><div class="line">sed &apos;s/pattern/repalce/&apos; file	#替换</div><div class="line">sed -i &apos;s/pattern/repalce/&apos; file	#将替换应用于file</div><div class="line"></div><div class="line">echo &quot;1.txt&quot; &gt; 1.txt &amp;&amp; sed &apos;s/txt/haha&apos; 1.txt	#在输出中用haha替换txt</div><div class="line">sed -i &apos;s/txt/haha/&apos; 1.txt	#将1.txt文件中的txt用haha替换掉</div><div class="line">#-i选项替换原文件</div><div class="line"></div><div class="line">echo &quot;hahaha&quot; | sed &apos;s/ha/HA/g&apos;	#全部替换</div><div class="line">echo &quot;hahaha&quot;	| sed &apos;s/ha/HA/2g&apos;	#指定位置替换，从第2处开替换全局</div><div class="line"></div><div class="line">#移除匹配样式的行</div><div class="line">sed &apos;/pattern/d</div><div class="line">sed &apos;/^$/d&apos;	##移除空白行</div><div class="line"></div><div class="line">#在sed中用&amp;标记已匹配字符串</div><div class="line">echo &quot;A wonderful goal&quot; | sed &apos;s/\w\+/[&amp;]/g&apos;	#\w\+匹配每一个单词</div><div class="line"></div><div class="line">#子串匹配标记\1,\2...</div><div class="line">echo &quot;1st 2nd 3rd&quot; | sed &apos;s/\(\w\+\) \(\w\+\) \(\w\+\)/\2 \1 \3/&apos;</div><div class="line">2nd 1st 3rd</div><div class="line">#将\2和\1交换次序，(),+等在sed中要转义，否则要报错</div><div class="line"></div><div class="line">#组合多个表达式</div><div class="line">sed &apos;expression1; expression2; ...</div><div class="line">echo &quot;aabbcc&quot; | sed &apos;s/a/A/; s/b/B/; s/c/C/g&apos;</div><div class="line">AaBbCC</div><div class="line"></div><div class="line">#双引号 &quot; &quot; 内的特殊符号（如$等），可以保有原本的特性</div><div class="line">#单引号 &apos; &apos; 内的特殊字符则仅为一般字符（纯文本）</div><div class="line">#引用</div><div class="line">text=hello</div><div class="line">echo &apos;hello world&apos; | sed &quot;s/$text/HELLO/&quot;</div><div class="line">HELLO world</div></pre></td></tr></table></figure></p>
<p><br></p>
<h2 id="awk入门"><a href="#awk入门" class="headerlink" title="awk入门"></a>awk入门</h2><p><code>awk</code>被设计用于数据流，它可以对列和行进行操作。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div></pre></td><td class="code"><pre><div class="line">#awk ‘begin&#123;print &quot;start&quot;&#125; pattern &#123;command&#125; end&#123;print &quot;end&quot;&#125;’ file</div><div class="line">awk &apos;&#123;sum += $1&#125;; &#123;print sum&#125;&apos;</div><div class="line">#awk脚本由:begin块、end块和能使用模式(pattern)匹配的通用语句块 组成</div><div class="line">#3个部分都是可选的</div><div class="line">#awk也可以从stdin中读取内容</div><div class="line">cat /etc/passwd | awk -F: &apos;&#123;print $1&#125;&apos;	#-F指定界定符</div><div class="line"></div><div class="line">#awk中的特殊变量</div><div class="line">#NR：记录数量(number of records)，对应于当前行号</div><div class="line">#NF：字段数量(number of fields)，对应于当前行的字段数</div><div class="line">#$0：执行过程中当前行的文本内容</div><div class="line">#$1,$2...$NF：第1个/2个.../最后一个 字段的内容</div><div class="line">echo -e &quot;L1 1\nL2 22\nL3 333&quot; | awk &apos;&#123;print NR NF $0 $1 $2&#125;&apos;</div><div class="line"># NR NF $0    $1  $2 $NF=最后一个=$2</div><div class="line">  1  2  L1 1  L1  1  1</div><div class="line">  2  2  L2 2  L2  2  2</div><div class="line">  3  2  L3 3  L3  3  3</div><div class="line"></div><div class="line">#将外部变量传递给awk</div><div class="line">#-v选项可将外部值传递给awk</div><div class="line">#  -v var=val  --assign=var=val</div><div class="line">var=&apos;12345&apos;</div><div class="line">echo | awk -v v1=$var &apos;&#123;print v1&#125;&apos;</div><div class="line">#多个变量</div><div class="line">var1=111; var2=222</div><div class="line">echo | awk &apos;&#123;print v1,v2&#125;&apos; v1=$var1 v2=$var2</div><div class="line">#变量来自文件而非标准输入</div><div class="line">awk &apos;&#123;print v1,v2&#125;&apos; v1=$var1 v2=$var2 file</div><div class="line"></div><div class="line">#用样式对awk进行过滤处理</div><div class="line">awk &apos;NR &lt; 3,NR==4&apos; 1.txt	#行号&lt;5的行</div><div class="line">awk &apos;/linux/&apos; 1.txt	#匹配带有linux的行（可用re）</div><div class="line">awk &apos;!/linux/&apos; 1.txt #!匹配不带linux的行</div><div class="line"></div><div class="line">#设置定界符</div><div class="line">awk -F: &apos;&#123;print $1&#125;&apos; /etc/passwd</div><div class="line">awk &apos;&#123;FS=&quot;:&quot;&#125; &#123;print $1&#125;&apos; /etc/passwd</div><div class="line">awk &apos;&#123;FS=&quot;:&quot;; print $1&#125;&apos; /etc/passwd</div><div class="line"></div><div class="line">#从awk中读取命令输出，用getline读取行</div><div class="line">echo | awk &apos;&#123;&quot;grep root /etc/passwd&quot; | getlin out; print out&#125;&apos;</div><div class="line">root:x:0:0:root:/root:/bin/bash</div><div class="line"></div><div class="line">#在awk中使用循环</div><div class="line">awk &apos;&#123;for(i=1;i&lt;4;i++) &#123;print $i&#125;&#125;&apos; 2.txt	#输出第1,2,3列</div></pre></td></tr></table></figure>
<p><br></p>
<h2 id="对文件中的行、单词、字符进行迭代"><a href="#对文件中的行、单词、字符进行迭代" class="headerlink" title="对文件中的行、单词、字符进行迭代"></a>对文件中的行、单词、字符进行迭代</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line">#迭代文件中的每一行</div><div class="line">echo -e &quot;1\n22\n333&quot; | while read line;do echo $line;done</div><div class="line">grep &quot;bash&quot; /etc/passwd | while read line;do echo $line;done</div><div class="line">#1</div><div class="line">#22</div><div class="line">#333</div><div class="line"></div><div class="line">#迭代一行中的每一个单词</div><div class="line">echo &quot;1 22 333&quot; | while read line;do for word in $line;do echo $word;done;done</div><div class="line">#1</div><div class="line">#22</div><div class="line">#333</div><div class="line"></div><div class="line">#迭代一个单词中的每一个字符</div><div class="line">echo &quot;abc&quot; | while read line;</div><div class="line">do</div><div class="line">	for word in $line;</div><div class="line">	do</div><div class="line">    	for((i=0;i&lt;$&#123;#word&#125;;i++));</div><div class="line">		do</div><div class="line">        	echo $&#123;word:i:1&#125;;</div><div class="line">		done;</div><div class="line">	done;</div><div class="line">done</div><div class="line">#写成一行</div><div class="line">echo &quot;abc&quot; | while read line; do for word in $line; do for((i=0;i&lt;$&#123;#word&#125;;i++)); do echo $&#123;word:i:1&#125;; done; done; done</div><div class="line">#a</div><div class="line">#b</div><div class="line">#c</div><div class="line">#$&#123;#word&#125;返回变量word的长度</div></pre></td></tr></table></figure>
<p><br></p>
<h2 id="按列合并文件"><a href="#按列合并文件" class="headerlink" title="按列合并文件"></a>按列合并文件</h2><p>可以使用<code>paste</code>命令实现列拼接<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">#paste - merge(整合) lines of files</div><div class="line">echo -e  &quot;1\n2\n3&quot; &gt; 1.txt &amp;&amp; echo -e &quot;Line1\nLine2\nLine3&quot; &gt; 2.txt</div><div class="line">paste 1.txt 2.txt</div><div class="line">1	Line1</div><div class="line">2	Line2</div><div class="line">3	Line3</div><div class="line">#默认定界符是制表符，用-d指定</div><div class="line">paste 1.txt 2.txt -d&apos;,&apos;</div></pre></td></tr></table></figure></p>
<p><br></p>
<h2 id="打印文件或行中的第n个单词或n列"><a href="#打印文件或行中的第n个单词或n列" class="headerlink" title="打印文件或行中的第n个单词或n列"></a>打印文件或行中的第n个单词或n列</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">awk -F&apos;:&apos; &apos;&#123;print $1,$3&#125;&apos; file1</div><div class="line">cut -d&apos;:&apos; -f 1,3 file1</div></pre></td></tr></table></figure>
<p><br></p>
<h2 id="打印不同行或样式之间的文本"><a href="#打印不同行或样式之间的文本" class="headerlink" title="打印不同行或样式之间的文本"></a>打印不同行或样式之间的文本</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">awk &apos;NR==1,NR==10&apos; /etc/passwd</div><div class="line">awk &apos;NR==1,NR==10&apos; /etc/passwd | awk -F&quot;:&quot; &apos;&#123;print $1,$NF&#125;&apos; #打印特定行内的特定列</div><div class="line"></div><div class="line">awk &apos;/start_pattern/, /end_pattern/&apos; file	#打印start到end之间的内容,可使用re</div><div class="line">awk &apos;/root/, /zhang/&apos; /etc/passwd	#打印root到zhang之间内容</div><div class="line">awk &apos;/^ro.?t&apos;/, /bash$/&apos; /etc/pass</div></pre></td></tr></table></figure>
<p><br></p>
<h2 id="以逆序形式打印行"><a href="#以逆序形式打印行" class="headerlink" title="以逆序形式打印行"></a>以逆序形式打印行</h2><p>可以使用<code>awk</code>, <code>tac</code>完成。tac就是反过来的cat。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">#tac - 反转显示文件中的行，行内的内容无法用tac反向排列</div><div class="line">tac 1.txt</div><div class="line">awk &apos;&#123;lifo[NR]=$0; lno=NR&#125; END&#123; for(;lno&gt;-1;lno--) &#123;print lifo[lno]&#125;;&#125;&apos; 1.txt</div></pre></td></tr></table></figure></p>
<p><br></p>
<h2 id="解析文本中的电子邮件和URL"><a href="#解析文本中的电子邮件和URL" class="headerlink" title="解析文本中的电子邮件和URL"></a>解析文本中的电子邮件和URL</h2><p>从给定的文件中解析出所需要的文本是我们从事文本处理时的一项任务。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">#egrep</div><div class="line"></div><div class="line">#匹配一个邮箱地址</div><div class="line">egrep -o &apos;[a-zA-Z0-9.]+@[0-9a-zA-Z.]+\.[a-zA-Z]&#123;2,4&#125;&apos; emails.txt</div><div class="line"></div><div class="line">#匹配一个URL地址</div><div class="line">egrep -o &quot;http://[a-zA-Z0-9.]+\.[a-zA-Z]&#123;2,3&#125;&quot; urls.txt</div></pre></td></tr></table></figure></p>
<p><br></p>
<h2 id="打印某个样式之前-之后n行"><a href="#打印某个样式之前-之后n行" class="headerlink" title="打印某个样式之前/之后n行"></a>打印某个样式之前/之后n行</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">grep &quot;zhang&quot; /etc/passwd -A 5	#Ater</div><div class="line">grep &quot;zhang&quot; /etc/passwd -B 5	#Before</div><div class="line">grep &quot;zhang&quot; /etc/passwd -B 5	#前后五行都打印</div></pre></td></tr></table></figure>
<p><br></p>
<h2 id="在文件中移除包含某个单词的句子"><a href="#在文件中移除包含某个单词的句子" class="headerlink" title="在文件中移除包含某个单词的句子"></a>在文件中移除包含某个单词的句子</h2><p>只要能写出正确的正则表达式(Regular Expression)，那就手到擒来<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sed &apos;s/[^.]*handsome boy[^.]*\.//g&apos; file.txt	#句子以.结束</div></pre></td></tr></table></figure></p>
<p><br></p>
<h2 id="文本切片与参数操作"><a href="#文本切片与参数操作" class="headerlink" title="文本切片与参数操作"></a>文本切片与参数操作</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">#替换变量内容中的部分文字</div><div class="line">var=&quot;One two three&quot;</div><div class="line">echo $&#123;var/t/T&#125;	#只替换了一个</div><div class="line">#One Two three</div><div class="line"></div><div class="line">#指定字符串起始位置和长度</div><div class="line">#$&#123;变量:开始部分:长度&#125;</div><div class="line">$&#123;vari:start:length&#125;</div><div class="line">echo &#123;var:0:2&#125;	#On</div><div class="line">echo &#123;var:1:6&#125;	#ne two</div><div class="line"></div><div class="line">#起始字符的索引是0,将最后一个字符索引记为-1</div><div class="line">echo $&#123;var:(-1)&#125;	#e</div><div class="line">echo $&#123;var:(-3):3&#125;	#ree</div></pre></td></tr></table></figure>
<p><br><br><br></p>
<h1 id="一团乱麻？没这回事"><a href="#一团乱麻？没这回事" class="headerlink" title="一团乱麻？没这回事"></a>一团乱麻？没这回事</h1><h2 id="入门"><a href="#入门" class="headerlink" title="入门"></a>入门</h2><p>本章会研究一些用于解析网站内容、下载数据、发送数据表单以及网站颇为任务自动化之类的实例。我们可以仅用几行脚本就将很多原本需要通过浏览器交互进行的活动管理自动化。通过命令行工具利用HTTP协议所提供的功能，我们可以用脚本解决大部分Web自动化的问题。</p>
<p><br></p>
<h2 id="网站下载"><a href="#网站下载" class="headerlink" title="网站下载"></a>网站下载</h2><p>使用一些命令行下载工具，从给定的URL中下载文件或网页。<br></p>
<p>wget是一个用于文件下载的命令行工具，选项多且用法灵活。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line">#Wget - The non-interactive(非交互式) network downloader</div><div class="line"></div><div class="line">wget URL1 URL2...</div><div class="line">wget http://xxx.com/nginx-1.12.0.tag.gz</div><div class="line">wget https://xxx/a.rpm http://xxxx/bb.rpm</div><div class="line"></div><div class="line">#指定文件名，指定信息输出(wget默认是stdout)</div><div class="line">wget http://mirrors.aliyun.com/repo/Centos-7.repo -O aliyun.repo -o ./wget.log</div><div class="line">wget URL -t 5	#-t，重试次数</div><div class="line"></div><div class="line">#下载限速</div><div class="line">wget --limit-rate=10m URL	#下载限速</div><div class="line">wget -Q 100m URL	#指定下载配额</div><div class="line"></div><div class="line">#端点续传</div><div class="line">#wget进行的下载在完成前被中断，从断点开始下载</div><div class="line">wget -c URL</div><div class="line"></div><div class="line">#用cURL下载</div><div class="line">#cURL是一个比wget更强大的高级命令工具</div><div class="line">#和wget不同，curl并不将下载数据写入文件，而是写入stdout，因此必须重定向到文件</div><div class="line"></div><div class="line">#复制或镜像整个网站</div><div class="line">#wget有一个选项可以使其像爬虫一样以递归方式手机网页上所有URL链接，并逐个下载</div><div class="line">#这样一来就可以下载一个网站的所有页面</div><div class="line">wget --mirror URL</div><div class="line">#-m(--mirror) -N -r -l inf --no-remove-listing 的缩写形式。</div><div class="line">或 wget -r -N -l DEPTH URL</div><div class="line">#-r递归下载，-l指定递归深度，-N(timestamp)只获取比本地时间新的文件</div><div class="line"></div><div class="line">#访问需要认证的HTTP或FTP页面</div><div class="line">wget --user &quot;username&quot; --password &quot;pass&quot; URL</div><div class="line">#如未在命令行内输入密码，则会由网页提示手动输入</div></pre></td></tr></table></figure></p>
<p><br></p>
<h2 id="以格式化纯文本下载网页"><a href="#以格式化纯文本下载网页" class="headerlink" title="以格式化纯文本下载网页"></a>以格式化纯文本下载网页</h2><p>网页其实就是包含HTML标记和其他诸如Javascript，CSS等元素的HTML页面。HTML标记是网页的基础，也许需要解析网页来查找特定的内容。<br></p>
<p>links,是一个基于命令行的Web浏览器<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">#links - lynx-like alternative character mode WWW browser</div><div class="line"></div><div class="line">#在命令行中浏览一个网页</div><div class="line">links www.baidu.com</div><div class="line"></div><div class="line">#以ASCII形式下载网页</div><div class="line">links --dump URL &gt; URL.txt</div><div class="line"></div><div class="line">#打开本地html文件</div><div class="line">links 1.html</div></pre></td></tr></table></figure></p>
<p><br></p>
<h2 id="cURL入门"><a href="#cURL入门" class="headerlink" title="cURL入门"></a>cURL入门</h2><p>cURL支持包括HTTP、HTTPS、FTP在内的众多协议。它还支持POST、cookie、认证、从指定偏移处下载部分文件、参照页(referer)、用户代理字符串、扩展头部(extra header)、限速、文件大小限制、进度条等特性。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div></pre></td><td class="code"><pre><div class="line">#curl - transfer a URL</div><div class="line">#cURL通常将下载文件输出到stdout，将进度信息输出到stderr</div><div class="line">#要想避免显示进度信息，可使用--silent</div><div class="line">#curl可用来下载、发送各种HTTP请求、指定HTTP头部等操作</div><div class="line"></div><div class="line">curl URL --silent	#输出到stdout</div><div class="line"></div><div class="line">#-O写入文件，文件名从URL中解析</div><div class="line">curl http://www.baidu.com/index.html -O --silent	#创建index.html</div><div class="line"></div><div class="line">#-o将数据写入指定文件</div><div class="line">curl URL -o baidu.html --progress	#--progress显示进度条</div><div class="line">links baidu.html</div><div class="line"></div><div class="line">#端点续传</div><div class="line">#和wget不同，cURL包含更高级的下载恢复特性，能够从特定的文件偏移处继续下载</div><div class="line">#curl可以通过指定一个偏移量来下载部分文件</div><div class="line">手动：curl URL/file -C offset	#偏移量以Byte为单位的整数</div><div class="line">自动：curl -C -URL	#自动续传</div><div class="line"></div><div class="line">#用cURL设置参照页字符串, --referer</div><div class="line">#参照页(referer)是位于HTTP头部中的一个字符串，用来标识用户从哪个页面到达当前页面的</div><div class="line">#如果用户点击网页A中某个链接，转到了网页B。那么网页B头部的referer会包含网页A的URL</div><div class="line">curl --referer Referer_URL target_URL</div><div class="line">curl --referer http://www.baidu.com http://jianshu.com</div><div class="line"></div><div class="line">#用cURL设置cookie, --cookie</div><div class="line">#可以用curl来存储HTTP操作过程中使用到的cookie</div><div class="line">#cookie用key=value形式，指定多个用 分号 分隔</div><div class="line">curl URL --cookie &quot;user=AAA;name=bbb&quot;</div><div class="line">curl URL --cookie-jar cookie.txt	#将cookie另存为</div><div class="line"></div><div class="line">#用cURL设置用户代理字符串, --user-agent</div><div class="line">#如果不指定代理，一些需要用户代理的网页就无法显示</div><div class="line">curl URL --user-agent(-A) &quot;Mozilla&quot;</div><div class="line"></div><div class="line">#用-H &quot;头部信息&quot;传递多个头部信息</div><div class="line">curl -H &quot;Host:www.haha.com&quot; -H &quot;Accept-language: en&quot; URL</div><div class="line"></div><div class="line">#限定cURL可占用的带宽</div><div class="line">curl URL --limit-rate 10m</div><div class="line"></div><div class="line">#指定最大下载量</div><div class="line">curl URL --max-filesize 大小(Bytes)</div><div class="line"></div><div class="line">#用cURL进行认证，-u username:password指定用户名和密码</div><div class="line">curl -u user:pass URL</div><div class="line">curl -u user URL	#手动输入密码</div><div class="line"></div><div class="line">#只打印响应头部信息(无数据部分), -I</div><div class="line">curl -I URL</div></pre></td></tr></table></figure>
<p><br></p>
<h2 id="从命令行访问163邮箱"><a href="#从命令行访问163邮箱" class="headerlink" title="从命令行访问163邮箱"></a>从命令行访问163邮箱</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">curl -u user http://mail.163.com</div><div class="line">#手动输入密码</div></pre></td></tr></table></figure>
<p><br></p>
<h2 id="制作图片抓取器及下载工具"><a href="#制作图片抓取器及下载工具" class="headerlink" title="制作图片抓取器及下载工具"></a>制作图片抓取器及下载工具</h2><p>可以用脚本解析图像文件并将图片自动下载下来。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">curl -s URL | grep -o &quot;&lt;img src=[^&gt;]*&gt;&quot; | sed &apos;s/&lt;img src=//g; s/&gt;//g&apos; &gt; img.list</div><div class="line">#匹配图片的URL，可能还需要细化修改</div><div class="line">#不同的URL可能有不同的规则，根据实际情况取出img的URL</div><div class="line"></div><div class="line">#下载图片</div><div class="line">wget $URL 或 curl -s -O $URL</div></pre></td></tr></table></figure></p>
<p><br></p>
<h2 id="查找网站中的无效链接"><a href="#查找网站中的无效链接" class="headerlink" title="查找网站中的无效链接"></a>查找网站中的无效链接</h2><p>将查找无效链接的工作自动化，那就比纯手动厉害多了！<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">lynx -traversal URL #会将URL中所有链接生成到reject.dat文件中</div><div class="line">sort -u reject.dat | while read link</div><div class="line">do</div><div class="line">	output=`curl -I $link -s | grep &quot;HTTP/.*OK&quot;`</div><div class="line">    if [[ -z $output ]]</div><div class="line">    then</div><div class="line">    	echo $link</div><div class="line">    fi</div><div class="line">done &lt; links.txt</div></pre></td></tr></table></figure></p>
<p><br></p>
<h2 id="跟踪网站变更"><a href="#跟踪网站变更" class="headerlink" title="跟踪网站变更"></a>跟踪网站变更</h2><p>可以编写一个定期运行的变更跟踪器(change tracker)，一旦发生变更，跟踪器便会发出声音或发送提示信息。<br>在不同时间检索网站，然后利用 <code>diff</code> 命令进行比对。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">curl URL --silent -o `date +%F`.html	#第一次</div><div class="line">curl URL --silent -o `date +%F`.html	#第二次</div><div class="line">diff -u 第一次 第二次</div></pre></td></tr></table></figure></p>
<p><br></p>
<h2 id="以POST方式发送网页并读取响应"><a href="#以POST方式发送网页并读取响应" class="headerlink" title="以POST方式发送网页并读取响应"></a>以POST方式发送网页并读取响应</h2><p>POST 和 GET 是HTTP协议中用于发送或检索信息的两种请求类型。<br>在GET请求方式中，利用网页的URL来发送参数(“键-值”)；而POST方式用于提交表单，如提交用户名、密码以及检索登录页面等。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">curl URL -d “postarg=AABBCC” #-d,http post data</div><div class="line">curl URL -d &quot;post1=key1&amp;post2=key2&amp;post3...&quot;	#指定多个数据</div><div class="line"></div><div class="line">wget URL -post-data &quot;post1=key1&quot;</div></pre></td></tr></table></figure></p>
<p><br><br><br></p>
<h1 id="Plan-B"><a href="#Plan-B" class="headerlink" title="Plan B"></a>Plan B</h1><p><br></p>
<h2 id="简介-4"><a href="#简介-4" class="headerlink" title="简介"></a>简介</h2><p>提取快照和备份数据都是重要的工作，我们可以通过shell脚本来实现备份自动化。<br>归档和压缩对于SA来说同样很重要，有多种压缩格式。<br>加密是一种保护数据的方法，为了减少加密数据的大小，文件在加密前通常需要先归档和压缩。</p>
<p><br></p>
<h2 id="用tar归档"><a href="#用tar归档" class="headerlink" title="用tar归档"></a>用tar归档</h2><p><code>tar</code>命令可以用来归档文件(tar archives tar)。可以将多个文件和文件夹打包为单个文件，同时还能保留所有的文件属性。<br>由<code>tar</code>命令创建的文件通常称为tarball。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div></pre></td><td class="code"><pre><div class="line">#归档文件，-c(create file)</div><div class="line">tar -cf 1.tar [sources]	#-f(specify filename)指定文件名</div><div class="line">#文件名必须紧跟在-f之后</div><div class="line">tar -cvf txt.tar *.txt	#-v(verbose)详细信息</div><div class="line"></div><div class="line">#向已归档文件中添加文件，-r</div><div class="line">tar -rvf txt.tar *.html</div><div class="line"></div><div class="line">#列出归档文件中的内容，-t</div><div class="line">tar -tf txt.tar	#列出归档内容</div><div class="line">tar -tvf txt.tar	#列出内容详细信息</div><div class="line"></div><div class="line">#从归档文件中提取文件或文件夹，-x(exact)</div><div class="line">tar -xf txt.tar	#默认提取到当前目录</div><div class="line">#-C指定提取目录</div><div class="line">tar -xvf txt.tar -C /dir/path</div><div class="line">#只提取归档中特定文件</div><div class="line">tar -xf txt.tar 1.txt 1.html -C /tmp	#只会提取1.txt和1.html文件</div><div class="line"></div><div class="line">#在tar中使用stdin和stdout</div><div class="line">tar -cvf - *.text | tar -xvf - -C /tmp</div><div class="line"></div><div class="line">#拼接两个归档文件，-A</div><div class="line">tar -Af txt.tar html.tar</div><div class="line">tar -tvf txt.tat	#验证是否成功</div><div class="line"></div><div class="line">#添加选项，可以将指定的任意文件加入到归档文件中。如果同名文件已存在，不会覆盖源文件，那么结果就是归档中包含了多个同名文件</div><div class="line">#通过检查时间戳来更新对党文件中的内容，-u</div><div class="line">#只有比归档文件中同名文件 更新(newer) 才添加</div><div class="line">tar -uvf html.tar 1.html</div><div class="line"></div><div class="line">#比较归档文件与文件系统中的内容，-d</div><div class="line">tar -df txt.tar 1.txt 2.txt</div><div class="line"></div><div class="line">#从归档文件中删除文件，--delete</div><div class="line">tar -f txt.tar --delete 1.txt 2.txt</div><div class="line"></div><div class="line">#从归档文件中排除部分文件,--exclude</div><div class="line">tar -cf all.tar ./* --exclude=&quot;*.html&quot;	#排除.html文件</div><div class="line">tar -cvf txt.tar *.txt --exclude=&quot;1.txt&quot;</div><div class="line"></div><div class="line">#打印总字节数,--totals</div><div class="line">tar -cf all.txt ./* --totals</div><div class="line"></div><div class="line"></div><div class="line">#压缩tar归档文件，指定不同压缩格式</div><div class="line"></div><div class="line">#-z,	.tar.gz</div><div class="line">#-j,	.tar.bz2</div><div class="line">#--lzma,	.tar.lzma,</div><div class="line">#.tar.lzo</div><div class="line">tar -czvf txt.tar.gzip *.txt</div><div class="line">tar -xzvf txt.tar -C /dir/path</div></pre></td></tr></table></figure></p>
<p><br></p>
<h2 id="用cpio归档"><a href="#用cpio归档" class="headerlink" title="用cpio归档"></a>用cpio归档</h2><p><code>cpio</code>是类似于tar的另一种归档格式。它多用于RPM软件包、Linux内核和initramfs文件等。<br>cpio通过stdin获取输入，并将归档写入stdout。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">touch file&#123;1..4&#125;</div><div class="line"></div><div class="line">echo file1 file2 file3 file4 | cpio -ov file.cpio</div><div class="line">#-o指定输出，-v打印归档文件列表</div><div class="line"></div><div class="line">#-i指定输入，-t列出归档中文件</div><div class="line">cpio -it &lt; file.cpio</div></pre></td></tr></table></figure></p>
<p><br></p>
<h2 id="用gunzip或gzip压缩"><a href="#用gunzip或gzip压缩" class="headerlink" title="用gunzip或gzip压缩"></a>用gunzip或gzip压缩</h2><p>gzip是GNU/Linux下常用压缩格式。<code>gzip</code>,<code>gunzip</code>都可处理gzip压缩文件类型。<br><code>gzip</code>只能够压缩单个文件，而无法对目录和多个文件进行归档。因此需要先交给<code>tar</code>，然后再用<code>gzip</code>压缩<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">gzip file	#file.gz，会覆盖原文件</div><div class="line">gunzip file.gz	#file，也会删除原文件</div><div class="line"></div><div class="line">#列出压缩文件的属性信息，-l</div><div class="line">gzip -l file.gz</div><div class="line"></div><div class="line">#指定gzip的压缩级别，--fast或--best</div><div class="line">--fast	最低压缩比，最快速度完成</div><div class="line">--best	最高压缩比，最慢速度完成</div><div class="line"></div><div class="line">#将gzip与归档文件结合，-z</div><div class="line">tar -czvf txt.tar.gzip ./*.txt</div><div class="line">#-a指定从文件扩展名自动判断压缩格式</div><div class="line">tar -cavf txt.tar.gzip ./*.txt</div><div class="line"></div><div class="line">#tar只能从命令行中接收有限个文件，要解决这个问题，可以写一个循环并添加-r选项</div><div class="line"></div><div class="line">#解压缩，-x</div><div class="line">tar -xzvf txt.tar.gzip</div><div class="line">tar -xavf txt.tar.gzip -C /dir/path</div></pre></td></tr></table></figure></p>
<p><br></p>
<h2 id="用bunzip或bzip压缩"><a href="#用bunzip或bzip压缩" class="headerlink" title="用bunzip或bzip压缩"></a>用bunzip或bzip压缩</h2><p><code>bzip2</code>通常能够生成比gzip更小(压缩比更高)的文件。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">bzip2 file	#file.bz2,同理会覆盖原文件</div><div class="line">bzip2 file -k	#保留原文件</div><div class="line">bunzip2 file.bz2	#解压缩</div><div class="line">bunzip file.bz2 -k</div><div class="line"></div><div class="line">#从stdin读入并写到stdout</div><div class="line">cat file | bzip2 -c &gt; file.bz2</div><div class="line"></div><div class="line">#将bzip2与归档文件结合，-j</div><div class="line">tar -cvjf 1.tar.bz2 ./1.*</div><div class="line">tar -cavf 1.tar.bz2 ./1.*	#-a根据文件扩展名自动判断压缩格式</div><div class="line">tar -xjvf 1.tar.bz2</div><div class="line">tar -xavf 1.tar.bz2 -C /tmp</div><div class="line"></div><div class="line">#压缩比</div><div class="line">#从1级(速度最快，压缩率最低)到9级</div><div class="line">bzip -9 -k file</div><div class="line"></div><div class="line">#对成千上万的文件进行归档，需要借助 循环和-r选项</div></pre></td></tr></table></figure></p>
<p><br></p>
<h2 id="lzma压缩"><a href="#lzma压缩" class="headerlink" title="lzma压缩"></a>lzma压缩</h2><p><code>lzma</code>是一个较新的压缩工具，它提供了比gzip或bzip2更好的压缩率。<br>xz, unxz, xzcat, lzma, unlzma, lzcat - Compress or decompress .xz and .lzma files<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">lzma file	#file.lzma,同样也会删除原文件</div><div class="line">lzma file -k 	#保留原文件</div><div class="line">unlzma file.lzma</div><div class="line"></div><div class="line">#从stdin读入并写入stdout</div><div class="line">cat file | lzma -C &gt; file.lzma</div><div class="line"></div><div class="line">#与tar相结合,--lzma</div><div class="line">tar -cvf 1.tar.lzma ./1.* --lzma</div><div class="line">tar -cavf 1.tat.lzma ./1.*	#自动判断</div><div class="line">tar -xvf 1.tar.lzma --lzma</div><div class="line">tar -xavf 1.tar.lzma -C /tmp</div><div class="line"></div><div class="line">#压缩率</div><div class="line">#从1级到9级(压缩级别最高，速度最慢)</div><div class="line"></div><div class="line">#对成千上万的文件，需要使用循环和-r选项</div></pre></td></tr></table></figure></p>
<p><br></p>
<h2 id="zip归档和压缩"><a href="#zip归档和压缩" class="headerlink" title="zip归档和压缩"></a>zip归档和压缩</h2><p><code>zip</code>在Linux下不如<code>gzip</code>,<code>bzip2</code>那么广泛，但在Internet上的文件通常都采用这种格式。<br>zip - package and compress (archive) files<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">zip file.zip file</div><div class="line">unzip file.zip</div><div class="line">#与lzma,gzip,bzip2相比，zip完成后不会删除原文件</div><div class="line"></div><div class="line">#对目录和文件进行递归操作,-r</div><div class="line">zip -r dir.zip /root/test ./file</div><div class="line"></div><div class="line">#向归档文件中增加内容，-u</div><div class="line">zip dir.zip -u newfile</div><div class="line"></div><div class="line">#从压缩文件中删除内容，-d</div><div class="line">zip -d dir.zip file</div><div class="line"></div><div class="line">#列出归档文件中内容</div><div class="line">unzip -l dir.zip</div></pre></td></tr></table></figure></p>
<p><br></p>
<h2 id="超高压缩率的squashfs文件系统"><a href="#超高压缩率的squashfs文件系统" class="headerlink" title="超高压缩率的squashfs文件系统"></a>超高压缩率的squashfs文件系统</h2><p><code>squashfs</code>是一种只读型的超高压缩率文件系统。这种文件系统能够将 2GB-3GB的数据压缩成一个700MB的文件。<br>你有没有想过Linux Live CD是怎样运行的？当Live CD启动后，它会加载一个完整的Linux环境。这就是利用了一种被称为squashfs的只读型压缩文件系统。它将根文件系统保存在一个压缩过的文件系统文件中。这个文件可以使用环回的形式来挂载并对其中的文件进行访问。一次当进程需要某些文件，可以将它们解压，然后载入内存中使用。<br>如果需要构建一个定制的Live OS，或是需要超高压缩率的文件并且无需解压就可以访问文件，那么squashfs的相关知识就能派上用场。要解压个头较大的压缩文件，需要花费不少时间。但如果将文件以环回形式挂载，速度就飞快，因为只有出现访问请求的时候，对应的那部分压缩文件才会被解压缩。而普通的解压缩方式是首先压缩所有的数据。</p>
<p>环回文件系统就是指那些在文件中而非物理设备中创建的文件系统。比如我们可以创建一个文件，然后把这个文件格式化为我们常见ntfs、exfat或者ext4等文件系统格式，然后把它挂载在一个目录上使用。</p>
<p>如果你有一张Ubuntu CD，可以在CDRom Root/casper/filesystem.squashfs中找到文件.squashfs。<br>squashfs在内部采用了gzip和lzma这类压缩算法。</p>
<p>mksquashfs - tool to create and append to squashfs filesystems<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">yum install squashfs-tools -y</div><div class="line"></div><div class="line">#创建squashfs文件</div><div class="line">mksquashfs source compressfile.squashfs</div><div class="line"></div><div class="line">mksquashfs /etc etc.squashfs</div><div class="line">#/etc(67M) --&gt; etc.suqashfs(18M)</div><div class="line"></div><div class="line">#要挂载squashfs文件，利用环回形式进行挂载</div><div class="line">mkdir /mnt/squash</div><div class="line">mount -o loop etc.squashfs /mnt/squash</div><div class="line">#此处挂载使用etc.squashfs文件系统</div><div class="line">#如果直接查看etc.squashfs，就是一个普通文件，但是挂在以后所有文件都出现了</div><div class="line">umount /mnt/squash</div><div class="line"></div><div class="line">#在创建squashfs文件时排除指定文件，-e</div><div class="line">mksquashfs /etc etc.squashfs -e /etc/passwd /etc/shadow /etc/*.txt</div><div class="line">#在挂载之后就没有相关文件了</div></pre></td></tr></table></figure></p>
<p><br></p>
<h2 id="加密工具与散列"><a href="#加密工具与散列" class="headerlink" title="加密工具与散列"></a>加密工具与散列</h2><p>加密技术主要用于防止数据遭受未经授权的访问。<br>Linux下某些工具用于执行加密和解密，使用加密算法散列值来验证数据完整性。</p>
<p><strong><code>crypt</code>, <code>gpg</code>, <code>base64</code>, <code>md5sum</code>, <code>sha1sum</code>, <code>openssl</code>的用法</strong></p>
<h3 id="ccypt"><a href="#ccypt" class="headerlink" title="ccypt"></a>ccypt</h3><p>ccrypt是为了取代UNIX crypt而设计的，这个实用工具可用于文件和数据流加密及解密。<br>ccrypt - encrypt and decrypt files and streams<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">ccrypt 1.txt	#会要求输入口令(encryption key)</div><div class="line">#之后会生成1.txt.cpt覆盖原文件</div><div class="line"></div><div class="line">#更改key,-x</div><div class="line">ccrypt -x 1.txt.cpt	#输入old key和new key</div><div class="line"></div><div class="line">#解密，-d(--decrypt)</div><div class="line">ccrypt -d 1.txt.cpt	#输入key解密</div></pre></td></tr></table></figure></p>
<h3 id="gpg"><a href="#gpg" class="headerlink" title="gpg"></a>gpg</h3><p>gpg(GNU privacy guard,GNU隐私保护)，是一种应用广泛的加密方案。<br>它采用签名密钥技术保护文件内容，只有经过认证的用户才能访问数据。我们对gpg签名早已耳熟能详。<br>gpg - OpenPGP encryption and signing tool<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">#加密，-c(--symmetric)对称加密</div><div class="line">gpg -c file	#会要求输入口令(Passphrase)，生成file.gpg</div><div class="line">#解密</div><div class="line">gpg file.gpg</div></pre></td></tr></table></figure></p>
<h3 id="base64"><a href="#base64" class="headerlink" title="base64"></a>base64</h3><p><code>base64</code>是一组类似的编码方案(encoding scheme)，它通过将ASCII字符转换成以64为基数的形式(radix-64 representation)来用ASCII字符串描述二进制数据。base64可用来对 编码和解码 base64字符串。<br>base64 - base64 encode/decode data and print to standard output<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">#将文件编码为base64格式</div><div class="line">base64 file &gt; outputfile</div><div class="line">cat file | base64 &gt; outputfile</div><div class="line"></div><div class="line">#解码,-d</div><div class="line">base64 -d outputfile &gt; file</div></pre></td></tr></table></figure></p>
<h3 id="md5sum与sha1sum"><a href="#md5sum与sha1sum" class="headerlink" title="md5sum与sha1sum"></a>md5sum与sha1sum</h3><p><code>md5sum</code> 和 <code>sha1sum</code> 都是单向散列算法(unidirecrional hash algorithm)，均无法逆推出原始数据。<br>它们通常用于验证数据完整性或为特定数据生成唯一的密钥，因为通过分析文件内容，它们可以为每个文件生成一个唯一的密钥。</p>
<p>这种类型的散列算法是存储密码的理想方案。密码使用其对应的散列值来存储。如果某个用户需要认证，读取该用户提供的密码并转换成散列值，然后将其与之前存储的散列值进行比对。<br>将密码以明文的形式存储是非常危险的事情，它面临密码泄露的危险。而因为 md5sum和sha1sum 是单向散列算法，所以密码使用散列值存储是很安全的。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">echo &quot;1.txt&quot; &gt; 1.txt</div><div class="line">md5sum 1	#生成密钥到stdout</div><div class="line">#39061daa34ca3de20df03a88c52530ea  1.txt</div><div class="line"></div><div class="line">sha1sum file	#生成密钥到stdout</div><div class="line">#659fcbc505db207c03b5c4c0b6981d63286abe21  1.txt</div><div class="line"></div><div class="line">#查看/etc/shadow中密码的散列值</div><div class="line">awk &apos;NR==1&apos; /etc/shadow | awk -F: &apos;&#123;print $2&#125;&apos;	#root密码散列</div></pre></td></tr></table></figure></p>
<h3 id="shadowlike散列-salted散列"><a href="#shadowlike散列-salted散列" class="headerlink" title="shadowlike散列(salted散列)"></a>shadowlike散列(salted散列)</h3><p>shadow密码通常都是salted密码，所谓SALT就是额外的一个字符串，用来起一个混淆的作用，使加密更加不同里被破解。salt由一些随机位组成，被用作密钥生成函数的输入之一，以生成密码的salted散列值。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">#/etc/passwd里面的密码散列类型就是salted散列</div><div class="line"></div><div class="line">#查看root密码对应的散列值</div><div class="line">head -1 /etc/shadow</div><div class="line">root:$6$ZlHRCZG2iRwQUXAu$RAEDH97nPdZB2RK20npua6Qf6jB7osatoC99ow3LtPQ6aORdLISYC7/4iTYU162emkQLt4ZafdgjyAeoSB7IU0::0:99999:7:::</div><div class="line"></div><div class="line">#openssl - OpenSSL command line tool</div><div class="line"></div><div class="line">#shadow密码是使用openssl生成</div><div class="line">#将SALT_STRING替换为随机字符串，同时将pass替换成你想测试的密码</div><div class="line">openssl -1 -salt SALT_STRING passwd</div></pre></td></tr></table></figure></p>
<p><br></p>
<h2 id="用rsync备份系统"><a href="#用rsync备份系统" class="headerlink" title="用rsync备份系统"></a>用rsync备份系统</h2><p><code>rsync</code>借助差异计算以及压缩技术来最小化数据传输量。相较于<code>cp</code>命令，它的优势在于使用了高效的差异算法(difference algorithm)。<br>它还支持网络数据传输。在进行复制的同时，rsync会比较源端和目的端的文件，只有当文件有更新是才进行复制。默认情况下，rsync并不会在目的端删除源端已不存在的文件。</p>
<p>rsync - a fast, versatile, remote (and local) file-copying tool<br>inotifywait - wait for changes to files using inotify<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div></pre></td><td class="code"><pre><div class="line">#-a进行归档，-v详细信息</div><div class="line">rsync -av source destination</div><div class="line">rsync -av /etc /tmp</div><div class="line"></div><div class="line">#异地cp</div><div class="line">rsync -av source username@host:PATH</div><div class="line">rsync -av username@host:PATH destination</div><div class="line">#rsync借助于ssh，可以使用ssh无秘钥认证</div><div class="line">rsync -av /etc zhang@192.168.1.11:~</div><div class="line"></div><div class="line">#-z, --compress  compress file data during the transfer</div><div class="line">rsync -avz zhang@192.168.1.11:/etc /tmp</div><div class="line"></div><div class="line">#注意，路径格式</div><div class="line">rsync /etc /tmp	#整个/etc目录</div><div class="line">rsync /etc/ /tmp	#/etc目录下所有内容</div><div class="line"></div><div class="line">#显示进度，--progress</div><div class="line">rsync -avz --progress /etc /tmp</div><div class="line"></div><div class="line">#排除部分文件，--exclude</div><div class="line">rsync -avz /etc /tmp --exclude=/etc/nginx --exclude &quot;*.txt&quot;</div><div class="line"></div><div class="line">#更新rsync时，删除不存在的文件，--delete</div><div class="line">#默认情况下，rsync并不会在目的端删除源端已不存在的文件</div><div class="line">rsync -avz /etc zhang@192.168.1.1:~ --delete</div><div class="line"></div><div class="line">#定期调度</div><div class="line">crontab -e</div><div class="line">0 */10 * * * rsync -avz /etc user@host:PATH</div><div class="line"></div><div class="line">#实时同步，inotifywait+rsync</div><div class="line">yum install inotify-tools -y</div><div class="line"></div><div class="line">#-m(monitor),-r(recursive),-q(--quiet)静默模式，-e(event)</div><div class="line"></div><div class="line">vi inotify_rsync.sh</div><div class="line">inotifywait -mrq -e creat,delete,modify,move --exclude &quot;^.*\.filepart$&quot; /etc</div><div class="line">rsync -az --exclude=&quot;.*&quot; --exclude=&quot;*.swp&quot; --exclude=&quot;.filepart&quot; --delete /etc /tmp &gt; /dev/null 2&gt;$1</div></pre></td></tr></table></figure></p>
<p><br></p>
<h2 id="用Git备份版本控制"><a href="#用Git备份版本控制" class="headerlink" title="用Git备份版本控制"></a>用Git备份版本控制</h2><p>维护和恢复变更最好的方法是使用版本控制系统。由于代码变更频繁，版本控制系统多用于软件开发和代码维护。<br>Git(GNU it)是有名气也是最高效的版本控制系统。我们可在非编程环境下用Git备份普通文件。</p>
<p>git - the stupid content tracker<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div></pre></td><td class="code"><pre><div class="line">mkdir /home/zhang/gittest</div><div class="line">cd /home/zhang/gittest</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">#在源主机中添加用户信息</div><div class="line">git config --global user.name &quot;username&quot;	#设置用户名</div><div class="line">git config --global user.email &quot;someone@example.com&quot;	#设置邮箱</div><div class="line"></div><div class="line">#创建一个空的Git版本库或初始化一个老版本</div><div class="line">git init</div><div class="line"></div><div class="line">#记录变更到版本库</div><div class="line">git commit</div><div class="line"></div><div class="line">#添加远程git目录并同步备份</div><div class="line">git remote add origin user@host:/home/zhang/gittest</div><div class="line"></div><div class="line">#为git跟踪(git tracking)添加或删除文件</div><div class="line">#add,添加内容至索引</div><div class="line">git add *</div><div class="line">#git add *.txt; git add *.ph	#添加部分文件</div><div class="line"></div><div class="line">#删除不需要跟踪的文件和文件夹</div><div class="line">#rm,从工作去和索引删除文件</div><div class="line">git rm file</div><div class="line">#git rm *.txt</div><div class="line"></div><div class="line">#检查点或创建备份点(check point)</div><div class="line">git commit -m &quot;Commit Message&quot;</div><div class="line"></div><div class="line">#push,更新远程</div><div class="line">git push</div><div class="line"></div><div class="line">#用Git恢复数据</div><div class="line">#log,显示提交日志</div><div class="line">git log</div><div class="line"></div><div class="line">#返回之前某个版本或状态</div><div class="line">git checkout xxxxxxxx(Commit ID)</div><div class="line"></div><div class="line">#clone,克隆一个版本库到本地</div><div class="line">git clone URL</div><div class="line">git clone user@host:PATH</div></pre></td></tr></table></figure></p>
<p><br></p>
<h2 id="用dd克隆磁盘"><a href="#用dd克隆磁盘" class="headerlink" title="用dd克隆磁盘"></a>用dd克隆磁盘</h2><p><code>dd</code>命令能用于克隆任何类型的磁盘，如硬盘、闪存、CD、DVD及软盘。<br>可能需要创建所有分区的副本而不仅仅是复制内容，包括硬盘分区、引导记录、分区表等信息。</p>
<p>使用dd的时候，要留意参数的顺序。错误的参数会损毁全部数据。dd基本上算是一个比特流复制器(bitstream duplicator),它可以将来自磁盘的比特流写入文件，也可以将来自文件的比特流写入硬盘。</p>
<p>dd - convert and copy a file<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">dd if=source of=target bs=block_size count=count</div><div class="line">#bs块大小，count块数</div><div class="line"></div><div class="line">dd if=/tmp/centos7.iso of=/dev/sdc</div><div class="line"></div><div class="line">#/dev/zero是一个字符设备，它总是返回字符&apos;\0&apos;</div><div class="line">dd if=/dev/zero of=./file bs=10m count=100</div><div class="line"></div><div class="line">#用环回(loop back)方法可将任何由dd生产的文件镜像进行挂载</div><div class="line">mount -o loop file /mnt</div></pre></td></tr></table></figure></p>
<p><br><br><br></p>
<h1 id="无网不利"><a href="#无网不利" class="headerlink" title="无网不利"></a>无网不利</h1>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;小试牛刀&quot;&gt;&lt;a href=&quot;#小试牛刀&quot; class=&quot;headerlink&quot; title=&quot;小试牛刀&quot;&gt;&lt;/a&gt;小试牛刀&lt;/h1&gt;&lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#bash(Bourne Again Shell)，shell环境使得用户能与操作系统的内核进行交互操作&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#!/bin/bash&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#date&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#description&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;cmd1; cmd2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;cmd3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#sh /path/xx.sh&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#Bash还有一个历史记录文件 ~/.bash_history&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Linux" scheme="https://zhang21.github.io/categories/Linux/"/>
    
    
      <category term="Shell" scheme="https://zhang21.github.io/tags/Shell/"/>
    
  </entry>
  
  <entry>
    <title>歌词摘抄</title>
    <link href="https://zhang21.github.io/2017/09/13/song/"/>
    <id>https://zhang21.github.io/2017/09/13/song/</id>
    <published>2017-09-13T07:08:16.000Z</published>
    <updated>2017-09-13T07:13:04.830Z</updated>
    
    <content type="html"><![CDATA[<p>就像蝴蝶飞不过沧海，没有人会忍心责怪<br><br></p>
<p>这个城市一下雨就进入了秋天，</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;就像蝴蝶飞不过沧海，没有人会忍心责怪&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;这个城市一下雨就进入了秋天，&lt;/p&gt;

    
    </summary>
    
      <category term="Notes" scheme="https://zhang21.github.io/categories/Notes/"/>
    
    
      <category term="Songs" scheme="https://zhang21.github.io/tags/Songs/"/>
    
  </entry>
  
  <entry>
    <title>工作与人生</title>
    <link href="https://zhang21.github.io/2017/09/04/%E5%B7%A5%E4%BD%9C%E4%B8%8E%E4%BA%BA%E7%94%9F/"/>
    <id>https://zhang21.github.io/2017/09/04/工作与人生/</id>
    <published>2017-09-04T05:57:36.000Z</published>
    <updated>2017-11-03T01:54:52.321Z</updated>
    
    <content type="html"><![CDATA[<p>  我现在已经活到了人生的中途，拿一日来比喻人的一生，现在正是中午。人在童年时从朦胧中醒来．需要一些时间来克服清晨的软弱，然后就要投入工作；在正午时分，他的精力最为充沛，但已隐隐感到疲惫；到了黄昏时节，就要总结一日的工作，准备沉入永恒的休息。按我这种说法，工作是人一生的主题。这个想法不是人人都能同意的。我知道在中国，农村的人把生儿育女看作是一生的主题。把儿女养大，自己就死掉，给他们空出地方来——这是很流行的想法。在城市里则另有一种想法，但不知是不是很流行：它把取得社会地位看作一生的主题。站在北京八宝山的骨灰墙前，可以体会到这种想法。我在那里看到一位已故的大叔墓上写着：副系主任、支部副书记、副教授、某某教研室副主任，等等。假如能把这些“副”字去掉个把，对这位大叔当然更好一些，但这些“副”字最能证明有这样一种想法。顺便说一句，我到美国的公墓里看过，发现他们的墓碑上只写两件事：一是生卒年月。二是某年至某年服兵役；这就是说，他们以为人的一生只有这两件事值得记述：这位上帝的子民曾经来到尘世，以及这位公民曾去为国尽忠，写别的都是多余的，我觉得这种想法比较质朴……恐怕在一份青年刊物上写这些墓前的景物是太过伤感，还是及早回到正题上来罢。<br><a id="more"></a></p>
<p>  我想要把自己对人生的看法推荐给青年朋友们：人从工作中可以得到乐趣，这是一种巨大的好处。相比之下，从金钱、权力、生育子女方面可以得到的快乐，总要受到制约。举例来说，现在把生育作为生活的主题，首先是不合时宜；其次，人在生育力方面比兔子大为不如，更不要说和黄花鱼相比较；在这方面很难取得无穷无尽的成就。我对权力没有兴趣，对钱有一些兴趣，但也不愿为它去受罪——做我想做的事(这件事对我来说，就是写小说)，并且把它做好，这就是我的目标。我想，和我志趣相投的人总不会是一个都没有。<br><br><br>  根据我的经验，人在年轻时，最头疼的一件事就是决定自己这一生要做什么。在这方面，我倒没有什么具体的建议：干什么都可以，但最好不要写小说，这是和我抢饭碗。当然，假如你执意要写，我也没理由反对。总而言之，干什么都是好的；但要干出个样子来，这才是人的价值和尊严所在。人在工作时，不单要用到手、腿和腰，还要用脑子和自己的心胸。我总觉得国人对这后一方面不够重视，这样就会把工作看成是受罪。失掉了快乐最主要的源泉，对生活的态度也会因之变得灰暗……<br><br><br>  人活在世上，不但有身体，还有头脑和心胸——对此请勿从解剖学上理解。人脑是怎样的一种东西，科学还不能说清楚。心胸是怎么回事就更难说清。对我自己来说，心胸是我在生活中想要达到的最低目标。某件事有悖于我的心胸，我就认为它不值得一做；某个人有悖于我的心胸，我就觉得他不值得一交；某种生活有悖于我的心胸，我就会以为它不值得一过。罗素先生曾言，对人来说，不加检点的生活，确实不值得一过。我同意他的意见：不加检点的生活，属于不能接受的生活之一种。人必须过他可以接受的生活，这恰恰是他改变一切的动力。人有了心胸，就可以用它来改变自己的生活。<br><br><br>  中国人喜欢接受这样的想法：只要能活着就是好的，活成什么样子无所谓。从一些电影的名字就可以看出来：《活着》、《找乐》……我对这种想法是断然地不赞成。因为抱有这种想法的人就可能活成任何一种糟糕的样子，从而使生活本身失去意义。高尚、清洁、充满乐趣的生活是好的，人们很容易得到共识。卑下、肮脏、贫乏的生活是不好的，这也能得到共识。但只有这两条远远不够。我以写作为生，我知道某种文章好，也知道某种文章坏。仅知道这两条尚不足以开始写作。还有更加重要的一条，那就是：某种样子的文章对我来说不可取，绝不能让它从我笔下写出来，冠以我的名字登在报刊上。以小喻大，这也是我对生活的态度。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;  我现在已经活到了人生的中途，拿一日来比喻人的一生，现在正是中午。人在童年时从朦胧中醒来．需要一些时间来克服清晨的软弱，然后就要投入工作；在正午时分，他的精力最为充沛，但已隐隐感到疲惫；到了黄昏时节，就要总结一日的工作，准备沉入永恒的休息。按我这种说法，工作是人一生的主题。这个想法不是人人都能同意的。我知道在中国，农村的人把生儿育女看作是一生的主题。把儿女养大，自己就死掉，给他们空出地方来——这是很流行的想法。在城市里则另有一种想法，但不知是不是很流行：它把取得社会地位看作一生的主题。站在北京八宝山的骨灰墙前，可以体会到这种想法。我在那里看到一位已故的大叔墓上写着：副系主任、支部副书记、副教授、某某教研室副主任，等等。假如能把这些“副”字去掉个把，对这位大叔当然更好一些，但这些“副”字最能证明有这样一种想法。顺便说一句，我到美国的公墓里看过，发现他们的墓碑上只写两件事：一是生卒年月。二是某年至某年服兵役；这就是说，他们以为人的一生只有这两件事值得记述：这位上帝的子民曾经来到尘世，以及这位公民曾去为国尽忠，写别的都是多余的，我觉得这种想法比较质朴……恐怕在一份青年刊物上写这些墓前的景物是太过伤感，还是及早回到正题上来罢。&lt;br&gt;
    
    </summary>
    
      <category term="Literature" scheme="https://zhang21.github.io/categories/Literature/"/>
    
    
      <category term="王小波" scheme="https://zhang21.github.io/tags/%E7%8E%8B%E5%B0%8F%E6%B3%A2/"/>
    
  </entry>
  
  <entry>
    <title>告别信</title>
    <link href="https://zhang21.github.io/2017/09/04/%E5%91%8A%E5%88%AB%E4%BF%A1/"/>
    <id>https://zhang21.github.io/2017/09/04/告别信/</id>
    <published>2017-09-04T03:46:11.000Z</published>
    <updated>2017-09-04T04:07:53.092Z</updated>
    
    <content type="html"><![CDATA[<p>1999年，72岁的马尔克斯患上淋巴癌后，写了一封信向读者告别。<br><img src="/images/farewell.png" alt=""><br><a id="more"></a><br>如果有一刹那，上帝忘记我是一只布偶并赋予我片刻生命，我可能不会说出我心中的一切所想，但我必定会思考我所说的一切。</p>
<p>我会评价事物，按其意义大小而非价值多少。  </p>
<p>我会少睡觉，多思考。因为我知道，每当我们闭上一分钟眼睛，我们也就同时失去了60秒。当他人停滞时我会前行，当他人入梦时我会清醒，当他人讲话时我会倾听，就像享受一支美味的巧克力冰激凌！  </p>
<p>如果上帝赏我一段生命，我会简单装束，伏在阳光下，袒露的不仅是身体，还有我的魂灵。 </p>
<p>上帝呀，如果我有一颗心，我会将仇恨写在冰上，然后期待太阳的升起；我会用凡高的梦在星星上画一首贝内德第的诗，而塞莱特的歌会是将是我献给月亮的小夜曲。我会用泪水浇灌玫瑰，以此体味花刺的痛苦和花瓣的亲吻……  </p>
<p>上帝呀，如果我有一段生命……我不会放过哪怕是一天，而不对我所爱的人说我爱他们。我会使每个男人和女人都了解他们皆我所爱，我要怀着爱而生活。  </p>
<p>对于大人，我会向他们证明，那种认为因衰老而失去爱的想法是多么错误，我们是因为失去爱而衰老而不是与之相反。对于孩子，我会给他们插上翅膀而让他们自己学会飞翔；对于老人，我会教给他们死亡的来临不是因为衰老而是因为遗忘。  </p>
<p>人呀，我从你们身上学会了太多的东西… …我知道，人们都想伫立在颠峰上，殊不知，真正的幸福恰恰就在于攀登险阻的过程。我懂得，当婴儿用小拳头第一次抓住爸爸的手指时，他也就永远地抓住了它。  </p>
<p>我明白，一个人只有在帮助他人站起时才有权利俯视他。我能够从你们身上学到的东西是如此之多，可事实上已经意义寥寥，因为当人们将我敛入棺木时，我正在死去。  </p>
<p>永远说你感到的，做你想到的吧！如果我知道今天是我最后一次看你入睡，我会热烈地拥抱你，祈求上帝守护你的灵魂。如果我知道这是最后一次看你离开家门，我会给你一个拥抱一个吻，然后重新叫住你，再度拥抱亲吻。如果我知道这是最后一次听到你的声音，我会录下你的每个字句，以便可以一遍又一遍永无穷尽地倾听。如果我知道这是看到你的最后几分钟，我会说”我爱你”，而不是傻傻地以为你早已知道。  </p>
<p>永远有一个明天，生活给我们另一个机会将事情做好，可是如果我搞错了，今天就是我们所剩的全部，我会对你说我多么爱你，我永远不会忘记你。  </p>
<p>明天从不向任何人作保证，无论青年或老人，今天可能就是你最后一次看到你所爱的人。因此，别再等待了，今天就开始！因为如果明天永远不来，你也许会遗憾今天没来得及微笑，拥抱，亲吻，会遗憾自己忙碌得只能把它们归为一个最后的愿望。保护周围你爱的人吧，告诉他们你多么需要他们。爱他们，善待他们，用些时间对他们说：”对不起”，”原谅我”，”劳驾”，”谢谢”，以及你知道的所有爱的话语。  </p>
<p>没有人会因为你秘而不宣的思想而记住你。向上帝祈求力量和智慧来表达它们吧，向你的朋友证明，他们对你来说是多么的重要。  </p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;1999年，72岁的马尔克斯患上淋巴癌后，写了一封信向读者告别。&lt;br&gt;&lt;img src=&quot;/images/farewell.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="Literature" scheme="https://zhang21.github.io/categories/Literature/"/>
    
    
      <category term="马尔克斯" scheme="https://zhang21.github.io/tags/%E9%A9%AC%E5%B0%94%E5%85%8B%E6%96%AF/"/>
    
  </entry>
  
  <entry>
    <title>Markdown语法</title>
    <link href="https://zhang21.github.io/2017/09/01/Markdown%E8%AF%AD%E6%B3%95/"/>
    <id>https://zhang21.github.io/2017/09/01/Markdown语法/</id>
    <published>2017-09-01T10:16:38.000Z</published>
    <updated>2017-09-05T10:34:43.048Z</updated>
    
    <content type="html"><![CDATA[<h2 id="关于Markdown"><a href="#关于Markdown" class="headerlink" title="关于Markdown"></a>关于Markdown</h2><p>Markdown 是一种轻量级标记语言。它允许人们“使用易读易写的纯文本格式编写文档，然后转换成有效的XHTML(或者HTML)文档”。</p>
<h3 id="参考文件"><a href="#参考文件" class="headerlink" title="参考文件"></a>参考文件</h3><p><strong><a href="https://zh.wikipedia.org/wiki/Markdown" target="_blank" rel="external">Markdown-wiki</a></strong><br><strong><a href="https://daringfireball.net/projects/markdown/" target="_blank" rel="external">Markdown官网</a></strong><br><strong><a href="https://markdown-zh.readthedocs.io/en/latest/" target="_blank" rel="external">Markdown中文文档</a></strong><br><strong><a href="http://itmyhome.com/markdown/article/extension/strikethrougn.html" target="_blank" rel="external">Markdown语法</a></strong></p>
<a id="more"></a>
<p><br></p>
<h2 id="Markdown语法"><a href="#Markdown语法" class="headerlink" title="Markdown语法"></a>Markdown语法</h2><h3 id="段落与换行"><a href="#段落与换行" class="headerlink" title="段落与换行"></a>段落与换行</h3><ul>
<li>段落的前后必须是空行<br>空行是指行内什么都没有，或者只有空白符（空格或制表符）<br>相邻两行文本，如果中间没有空行，会显示在一行中（换行符被转换为空格）</li>
<li>如果需要在段内加入换行 <br><br>可以在前一行的末尾加入至少两个空格，然后换行写其它的文字</li>
<li>Markdown中的多数区块都需要在两个空行之间</li>
</ul>
<p><br></p>
<h3 id="粗体和斜体"><a href="#粗体和斜体" class="headerlink" title="粗体和斜体"></a>粗体和斜体</h3><p>语法：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">*斜体*, _斜体_</div><div class="line">**粗体**</div><div class="line">***粗斜体***</div><div class="line">~~删除线~~</div></pre></td></tr></table></figure></p>
<p>显示效果：</p>
<ul>
<li><em>斜体</em>, <em>斜体</em></li>
<li><strong>粗体</strong></li>
<li><strong><em>粗斜体</em></strong></li>
<li><del>删除线</del></li>
</ul>
<p><br></p>
<h3 id="分级标题"><a href="#分级标题" class="headerlink" title="分级标题"></a>分级标题</h3><h4 id="Setext形式"><a href="#Setext形式" class="headerlink" title="Setext形式"></a>Setext形式</h4><p>大标题：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">一级大标题</div><div class="line">========</div><div class="line"></div><div class="line">二级大标题</div><div class="line">--------</div></pre></td></tr></table></figure></p>
<p><br></p>
<h4 id="atx形式"><a href="#atx形式" class="headerlink" title="atx形式"></a>atx形式</h4><p>普通标题：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"># 一级标题</div><div class="line">## 二级标题</div><div class="line">### 三级标题</div><div class="line">#### 四级标题</div><div class="line">##### 五级标题</div></pre></td></tr></table></figure></p>
<p><br></p>
<h3 id="超链接"><a href="#超链接" class="headerlink" title="超链接"></a>超链接</h3><p>MarkDown支持两种形式的链接语法：行内式和参考式。</p>
<h4 id="行内式"><a href="#行内式" class="headerlink" title="行内式"></a>行内式</h4><p>语法说明：<br>[ ] 里面写链接文字，( ) 里面写链接地址，()中的” “可以指定title属性。</p>
<p>代码：<br><code>欢迎来到 [简书](www.jianshu.com &quot;Jianshu&quot;)</code></p>
<p>效果：<br>欢迎来到 <a href="www.jianshu.com" title="Jianshu">简书</a></p>
<h4 id="参考式"><a href="#参考式" class="headerlink" title="参考式"></a>参考式</h4><p>参考式超链接一般用在学术论文上面，或某一个链接在文章中多处使用，那么引用的方式创建链接将非常好，它可以让你对链接进行统一的管理。<br>语法说明：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">参考式链接分为两部分，文中的写法[链接文字][链接标记]，在文本任意位置添加[链接标记]:链接地址 “链接标题”，链接地址与链接标题前有一个空格</div><div class="line">如果链接文字本身可以作为链接标记，也可以写成[链接文字][]</div><div class="line">[链接文字]：链接地址的形式</div></pre></td></tr></table></figure></p>
<p>代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">简书里面有 [简书早报][1]、[简书晚报][2]以及 [简黛玉][3]</div><div class="line">[简黛玉 美人][3] 是一个[才女][]</div><div class="line">[1]:http://www.jianshu.com &quot;Jianshu&quot;</div><div class="line">[2]:http://www.jianshu.com &quot;EveningPaper&quot;</div><div class="line">[3]:http://www.jianshu.com</div><div class="line">[才女]:http://www.jianshu.com</div></pre></td></tr></table></figure></p>
<p>效果：<br>简书里面有 <a href="http://www.jianshu.com" title="Jianshu" target="_blank" rel="external">简书早报</a>、<a href="http://www.jianshu.com" title="EveningPaper" target="_blank" rel="external">简书晚报</a>以及<a href="http://www.jianshu.com" target="_blank" rel="external">简黛玉</a><br><a href="http://www.jianshu.com" target="_blank" rel="external">简黛玉 美人</a> 是一个<a href="http://www.jianshu.com" target="_blank" rel="external">才女</a><br><br></p>
<h4 id="自动链接"><a href="#自动链接" class="headerlink" title="自动链接"></a>自动链接</h4><p>MarkDown支持以比较简短的自动链接形式来处理网址和电子邮件，只要用&lt;&gt;包起来，MarkDown就会自动把它转成链接。</p>
<p>代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&lt;http://example.com&gt;</div><div class="line">&lt;address@example.com&gt;</div></pre></td></tr></table></figure></p>
<p><br></p>
<h3 id="锚点"><a href="#锚点" class="headerlink" title="锚点"></a>锚点</h3><p>MarkDown Extra只支持在标题后插入锚点，其他地方无效<br>Leanote编辑器右侧显示效果区域暂时不支持锚点跳转，所以点来点去发现没有跳转不必惊慌，你发布后的文章是支持的<br>在你准备跳转到的指定标题后插入锚点 { # 标记 }，然后在其他地方写上连接到锚点的链接</p>
<p>代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">目录 \&#123; \# index \&#125;</div><div class="line">跳转到 \[ 目录\ ]( \# index)</div></pre></td></tr></table></figure></p>
<p>效果：<br>目录 { #index }<br>跳转到 [目录 ](#index)</p>
<p><br></p>
<h3 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h3><h4 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h4><p>使用 <code>* ，+ ，-</code> 表示无序列表</p>
<p>代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">- 无序列表1</div><div class="line">- 无序列表2</div><div class="line">- 无序列表3</div></pre></td></tr></table></figure></p>
<p>效果：</p>
<ul>
<li>无序列表1</li>
<li>无序列表2</li>
<li>无序列表3</li>
</ul>
<h4 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h4><p>有序列表使用数字接着英文点</p>
<p>代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">1. 有序列表1</div><div class="line">2. 有序列表2</div><div class="line">3. 有序列表3</div></pre></td></tr></table></figure></p>
<p>效果：</p>
<ol>
<li>有序列表1</li>
<li>有序列表2</li>
<li>有序列表3</li>
</ol>
<h4 id="定义型列表"><a href="#定义型列表" class="headerlink" title="定义型列表"></a>定义型列表</h4><p>定义型列表由名词和解释组成。一行写上定义，紧跟一行写上解释。解释的写法：紧跟一个缩进（Tab）</p>
<h4 id="列表缩进"><a href="#列表缩进" class="headerlink" title="列表缩进"></a>列表缩进</h4><p>列表项目标记通常是放在最左边，但是其实也可以缩进，最多3个空格，项目标记后则一定要接着至少一个空格或制表符。</p>
<p>代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">*    轻轻的我走了， 正如我轻轻的来； 我轻轻的招手， 作别西天的云彩。</div><div class="line">那河畔的金柳， 是夕阳中的新娘； 波光里的艳影， 在我的心头荡漾。</div><div class="line">*    那榆荫下的一潭， 不是清泉， 是天上虹； 揉碎在浮藻间， 沉淀着彩虹似的梦。</div></pre></td></tr></table></figure></p>
<p>效果：</p>
<ul>
<li>轻轻的我走了， 正如我轻轻的来； 我轻轻的招手， 作别西天的云彩。<br>那河畔的金柳， 是夕阳中的新娘； 波光里的艳影， 在我的心头荡漾。</li>
<li>那榆荫下的一潭， 不是清泉， 是天上虹； 揉碎在浮藻间， 沉淀着彩虹似的梦。</li>
</ul>
<p><br></p>
<h3 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h3><p>引用需要在被引用的文本前加上 &gt; 符号</p>
<p>代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&gt; 引用1</div><div class="line">&gt; 引用2</div></pre></td></tr></table></figure></p>
<p>效果：</p>
<blockquote>
<p>引用1<br>引用2</p>
</blockquote>
<h4 id="引用的多层嵌套"><a href="#引用的多层嵌套" class="headerlink" title="引用的多层嵌套"></a>引用的多层嵌套</h4><p>区块引用可以嵌套（如引用的引用），只要根据层次加上不同数量的 <code>&gt;</code>符号</p>
<p>代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&gt;&gt;&gt; 请问MarkDown怎么用？</div><div class="line">&gt;&gt; 自己看教程！</div><div class="line">&gt; 教程在哪里？</div></pre></td></tr></table></figure></p>
<p>效果：</p>
<blockquote>
<p>请问MarkDown怎么用？</p>
<blockquote>
<p>自己看教程！</p>
<blockquote>
<p>教程在哪里？</p>
</blockquote>
</blockquote>
</blockquote>
<p><br></p>
<h3 id="插入图像"><a href="#插入图像" class="headerlink" title="插入图像"></a>插入图像</h3><p>图片的创建方式与超链接类似。</p>
<p>代码：<br><code>![](http://zhangxx5678.lofter.com/post/39b969_df4f526#)</code></p>
<p><br></p>
<h3 id="内容目录"><a href="#内容目录" class="headerlink" title="内容目录"></a>内容目录</h3><p>在段落中填写 <code>[TOC]</code> 以显示全文内容结构目录</p>
<p><br></p>
<h3 id="注脚"><a href="#注脚" class="headerlink" title="注脚"></a>注脚</h3><p>在需要添加注脚的文字后加上注脚名字 [^注脚名字]，称为加注。然后在文中的任意位置（一般最后）添加脚注，脚注前必须有对应的脚注名字。<br>注脚与注脚间必须空一行！<br>注脚自动被搬运到最后面，请到文章末尾查看，并且脚注后的链接可以直接跳转会到加注的地方</p>
<p>代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">使用 MarkDown[^1]可以提高书写效率，直接转换成 HTML[^2]</div><div class="line">[^1]:MarkDown是一种纯文本标记语言</div><div class="line">[^2]:HTML超文本标记语言</div></pre></td></tr></table></figure></p>
<p>效果：<br> 使用 MarkDown<a href="MarkDown是一种纯文本标记语言">^1</a>可以提高书写效率，直接转换成 HTML<a href="HTML超文本标记语言">^2</a></p>
<p><br></p>
<h3 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h3><p>可以在一行中用 三个以上的 <code>*</code>,<code>-</code>,<code>_</code> 建立一个分割线，行内不能有其他东西。</p>
<p>代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">1. * * *</div><div class="line">2.</div><div class="line">3. ***</div><div class="line">4.</div><div class="line">5. - - -</div><div class="line">6.</div><div class="line">7. ---</div></pre></td></tr></table></figure></p>
<p>效果：</p>
<hr>
<hr>
<hr>
<hr>
<p><br></p>
<h2 id="扩展语法"><a href="#扩展语法" class="headerlink" title="扩展语法"></a>扩展语法</h2><p>Markdown标准 本身所包含的功能有限，所以产生了许多第三方扩展语法，如 <a href="https://help.github.com/categories/writing-on-github/" target="_blank" rel="external">GFW, GitHub Flavored Markdown</a></p>
<h3 id="Tasklist"><a href="#Tasklist" class="headerlink" title="Tasklist"></a>Tasklist</h3><p>代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">- [ ] Monday</div><div class="line">- [ ] Tuesday</div><div class="line">- [ ] Wednesday</div><div class="line">- [ ] Tuesday</div><div class="line">- [ ] Friday</div></pre></td></tr></table></figure></p>
<p>效果：</p>
<ul>
<li style="list-style: none"><input type="checkbox"> Monday</li>
<li style="list-style: none"><input type="checkbox"> Tuesday</li>
<li style="list-style: none"><input type="checkbox"> Wednesday</li>
<li style="list-style: none"><input type="checkbox"> Tuesday</li>
<li style="list-style: none"><input type="checkbox"> Friday</li>
</ul>
<p><br></p>
<h3 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h3><ol>
<li>不管是哪种方式，第一行为表头，第二行为分割表头和主体部分，第三行开始每一行为一个表格行；</li>
<li>列与列之间用管道符号 | 隔开；</li>
<li>第二行还可以为不同的列指定对其方向，默认左对齐，在 - 右边加上 : 就右对齐</li>
</ol>
<p>代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">学号 | 姓名 | 分数</div><div class="line">- | - | -</div><div class="line">001 | 张三 | 78</div><div class="line">002 | 李四 | 67</div><div class="line">003 | 王五 | 99</div></pre></td></tr></table></figure></p>
<table>
<thead>
<tr>
<th>学号</th>
<th>姓名</th>
<th>分数</th>
</tr>
</thead>
<tbody>
<tr>
<td>001</td>
<td>张三</td>
<td>78</td>
</tr>
<tr>
<td>002</td>
<td>李四</td>
<td>67</td>
</tr>
<tr>
<td>003</td>
<td>王五</td>
<td>99</td>
</tr>
</tbody>
</table>
<p><br></p>
<h3 id="代码块和高亮"><a href="#代码块和高亮" class="headerlink" title="代码块和高亮"></a>代码块和高亮</h3><h4 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h4><p>插入代码的方式有两种，一种是利用缩进(Tab)，另一种是利用反引号 `` 和 ```     ```</p>
<p>代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Python语言的输出函数 `Print()` 怎么使用？</div></pre></td></tr></table></figure></p>
<p>效果：<br>Python语言的输出函数 <code>Print()</code> 怎么使用？</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">import os</div><div class="line">from flask import Flask</div><div class="line">app = Flask(app)</div></pre></td></tr></table></figure>
<h4 id="高亮"><a href="#高亮" class="headerlink" title="高亮"></a>高亮</h4><p>在 ``` 之后添加代码的语言</p>
<p>代码：<br>```python<br>import os<br>from flask import Flask<br>app = Flask(app)<br>```</p>
<p>效果：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> os</div><div class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask</div><div class="line">app = Flask(app)</div></pre></td></tr></table></figure></p>
<p><br></p>
<h3 id="流程图"><a href="#流程图" class="headerlink" title="流程图"></a>流程图</h3><p><strong> <a href="http://flowchart.js.org/" target="_blank" rel="external">流程图语法参考</a> </strong></p>
<p><br></p>
<h3 id="LaTeX公式"><a href="#LaTeX公式" class="headerlink" title="LaTeX公式"></a>LaTeX公式</h3><p><strong><a href="https://zh.wikipedia.org/wiki/LaTeX" target="_blank" rel="external">关于LaTEX：</a></strong></p>
<blockquote>
<p>是一种跨平台的基于<a href="https://zh.wikipedia.org/wiki/TeX" target="_blank" rel="external">TEX</a>的排版系统，对于生成复杂表格和数学公式，这一点表现得尤为突出。<br>因此它非常适用于生成高印刷质量的科技和数学、化学类文档。</p>
</blockquote>
<p><strong><a href="https://en.wikipedia.org/wiki/MathJax" target="_blank" rel="external">关于MathJax：</a></strong></p>
<blockquote>
<p>MathJax是一种跨浏览器JavaScript库，它使用MathML，LaTeX和ASCIIMathML 标记在Web浏览器中显示数学符号。<br>MathJax作为Apache License下的开源软件。</p>
</blockquote>
<p><strong><a href="https://math.meta.stackexchange.com/questions/5020/mathjax-basic-tutorial-and-quick-reference" target="_blank" rel="external">MathJax语法</a></strong></p>
<p><br></p>
<h4 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h4><p><code>$</code>表示行内公式<br>质能守恒公式 <code>$E=mc^2$</code> 方程式</p>
<p>效果：$E=mc^2$</p>
<p><code>$$</code>表示整行公式</p>
<p>代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$$\sum_&#123;i=1&#125;^n a_i=0$$</div><div class="line"></div><div class="line">$$f(x_1,x_x,\ldots,x_n) = x_1^2 + x_2^2 + \cdots + x_n^2 $$</div><div class="line"></div><div class="line">$$\sum^&#123;j-1&#125;_&#123;k=0&#125;&#123;\widehat&#123;\gamma&#125;_&#123;kj&#125; z_k&#125;$$</div></pre></td></tr></table></figure></p>
<p>效果：<br>$$\sum_{i=1}^n a_i=0$$</p>
<p>$$f(x_1,x_x,\ldots,x_n) = x_1^2 + x_2^2 + \cdots + x_n^2 $$</p>
<p>$$\sum^{j-1}<em>{k=0}{\widehat{\gamma}</em>{kj} z_k}$$</p>
<p><br></p>
<h2 id="Markdown编辑器"><a href="#Markdown编辑器" class="headerlink" title="Markdown编辑器"></a>Markdown编辑器</h2><p>介绍一些常用的书写、编辑Markdown的工具。</p>
<ul>
<li>MarkdownPad Windows (windows);</li>
<li>Texts (Windows, osX);</li>
<li>MarkPad (Windows);</li>
<li>Haroopad (Windows, osX, Linux);</li>
<li>ReText (Linux);</li>
<li>等等</li>
</ul>
<p><br></p>
<h2 id="格式转换"><a href="#格式转换" class="headerlink" title="格式转换"></a>格式转换</h2><p>Markdown文档可以方便地转换为 HTML, Word, PDF 等文件格式。<br>可以利用 软件 或者 命令 转换文件。</p>
<h3 id="转换为-HTML"><a href="#转换为-HTML" class="headerlink" title="转换为 HTML"></a>转换为 HTML</h3><h3 id="转换为-PDF"><a href="#转换为-PDF" class="headerlink" title="转换为 PDF"></a>转换为 PDF</h3><h3 id="转换为-Word"><a href="#转换为-Word" class="headerlink" title="转换为 Word"></a>转换为 Word</h3>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;关于Markdown&quot;&gt;&lt;a href=&quot;#关于Markdown&quot; class=&quot;headerlink&quot; title=&quot;关于Markdown&quot;&gt;&lt;/a&gt;关于Markdown&lt;/h2&gt;&lt;p&gt;Markdown 是一种轻量级标记语言。它允许人们“使用易读易写的纯文本格式编写文档，然后转换成有效的XHTML(或者HTML)文档”。&lt;/p&gt;
&lt;h3 id=&quot;参考文件&quot;&gt;&lt;a href=&quot;#参考文件&quot; class=&quot;headerlink&quot; title=&quot;参考文件&quot;&gt;&lt;/a&gt;参考文件&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://zh.wikipedia.org/wiki/Markdown&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Markdown-wiki&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;&lt;a href=&quot;https://daringfireball.net/projects/markdown/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Markdown官网&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;&lt;a href=&quot;https://markdown-zh.readthedocs.io/en/latest/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Markdown中文文档&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;&lt;a href=&quot;http://itmyhome.com/markdown/article/extension/strikethrougn.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Markdown语法&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Python" scheme="https://zhang21.github.io/categories/Python/"/>
    
    
      <category term="Markdown" scheme="https://zhang21.github.io/tags/Markdown/"/>
    
  </entry>
  
  <entry>
    <title>关于Nginx</title>
    <link href="https://zhang21.github.io/2017/09/01/%E5%85%B3%E4%BA%8ENginx/"/>
    <id>https://zhang21.github.io/2017/09/01/关于Nginx/</id>
    <published>2017-09-01T08:22:58.000Z</published>
    <updated>2017-09-01T12:46:35.644Z</updated>
    
    <content type="html"><![CDATA[<h3 id="关于Nginx"><a href="#关于Nginx" class="headerlink" title="关于Nginx"></a>关于Nginx</h3><p><strong> <a href="https://nginx.org/" target="_blank" rel="external">Nginx官网</a> </strong><br><strong> <a href="https://zh.wikipedia.org/wiki/Nginx" target="_blank" rel="external">Nginx-Wikipedia</a> </strong></p>
<p>Nginx（发音同engine x）是一个 Web服务器，也可以用作反向代理，负载平衡器和 HTTP缓存。它能反向代理 <code>HTTP, HTTPS, SMTP, POP3, IMAP</code> 的协议连接。<br>基于BSD-like协议发行，支持多种操作系统。<br><a id="more"></a><br>作为HTTP服务软件的后起之秀，Nginx有很多优点：</p>
<ul>
<li>在性能上，Nginx占用的系统资源更少，支持更多的并发连接（特别是小静态文件场景下），达到更高的访问效率；</li>
<li>在功能上，Nginx不仅是一个优秀的<em>Web服务软件</em>，还可以作为<em>反向代理</em> <em>负载均衡</em>及<em>缓存</em>使用。它类似于<em>LVS负载均衡</em>及<em>HAProxy</em>等专业代理软件，又类似于<em>Squid</em>等专业缓存服务软件；</li>
<li>在安装配置上，Nginx方便、简单、灵活。</li>
</ul>
<p>Nginx功能丰富，可作为HTTP服务器、反向代理服务器、邮件服务器。支持<em>FastCGI, SSL, Virtual Host, URL Rewrite, Gzip</em>等功能，并支持很多第三方模块扩展。</p>
<p><br></p>
<h4 id="与PHP的集成"><a href="#与PHP的集成" class="headerlink" title="与PHP的集成"></a>与PHP的集成</h4><p>自PHP-5.3.3起，PHP-FPM加入到了PHP核心，编译时加上–enable-fpm即可提供支持。<br>PHP-FPM以守护进程在后台运行，Nginx响应请求后，自行处理静态请求，PHP请求则经过fastcgi_pass交由PHP-FPM处理，处理完毕后返回。<br>Nginx和PHP-FPM的组合，是一种稳定、高效的PHP运行方式，效率要比传统的Apache和mod_php高出不少。</p>
<p><strong> Nginx的重要特性 </strong></p>
<blockquote>
<p>可针对静态资源高速高并发访问及缓存；<br>可使用反向代理加速，并且可进行数据缓存；<br>具有简单负载均衡、节点健康检查和容错功能；<br>支持远程FastCGI、Uwsgi、SCGI、Memcached Servers的加速和缓存；<br>支持SSL、TLS、SNI；<br>具有模块化的架构：过滤器包括gzip压缩、ranges支持、chunked响应、XSLT、SSI及图像缩放等功能。在SSI过滤器中，一个包含多个SSI的页面，如果FastCGI或反向代理处理，可被并行处理；<br>它具备的其他WWW服务特性：<br>支持基于名字、端口及IP的多虚拟主机站点；<br>支持Keep-alived和pipelined连接；<br>可进行修改Nginx配置，并且在代码上线时，可平滑重启，不中断业务访问；<br>可自定义访问日志格式，临时缓冲些日志操作，快速日志轮询及通过rsyslog处理日志；<br>可利用信号控制Nginx进程；<br>支持 3xx-5xx HTTP状态码重定向；<br>支持rewrite模块，支持URI重写及正则表达式匹配；<br>支持基于客户端IP地址和HTTP基本认证的访问控制；<br>支持PUT、DELETE、MKCOL、COPY及MOVE等较特殊的HTTP请求方法；<br>支持FLV流和MP4流技术产品应用；<br>支持HTTP响应速率限制；<br>支持同一IP地址的并发连接或请求数连接；<br>支持邮件服务器代理；</p>
</blockquote>
<p><br></p>
<h3 id="Nginx安装"><a href="#Nginx安装" class="headerlink" title="Nginx安装"></a>Nginx安装</h3><ol>
<li><p>添加RPM源安装:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">yum install -y gcc gcc-c++ make libtool zlib zlib-devel openssl openssl-devel pcre pcre-devel    安装依赖</div><div class="line">rpm -ivm http://nginx.org/packages/centos/7/noarch/RPMS/nginx-release-centos-7-0.el7.ngx.noarch.rpm 安装RPM源</div><div class="line">yum install -y nginx 安装Nginx</div><div class="line">rpm -q nginx 查询安装</div></pre></td></tr></table></figure>
</li>
<li><p>添加Nginx yum repository休息安装：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">vim /etc/yum.repos.d/nginx.repo</div><div class="line">[nginx] 唯一</div><div class="line">name=nginx repo</div><div class="line">baseurl=http://nginx.org/packages/OS/OSRELEASE/$basearch/</div><div class="line">gpgcheck=0</div><div class="line">enabled=1</div></pre></td></tr></table></figure>
</li>
<li><p>源码安装:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">cd /usr/local/src    建议解压于此目录</div><div class="line">wget http://xxx.xx.com/nginx.tar.gz</div><div class="line">tar -zxvf nginx.tar.gz</div><div class="line">cd ./nginx</div><div class="line">./configure --prefix=/usr/local</div><div class="line">make</div><div class="line">make install</div></pre></td></tr></table></figure>
</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;关于Nginx&quot;&gt;&lt;a href=&quot;#关于Nginx&quot; class=&quot;headerlink&quot; title=&quot;关于Nginx&quot;&gt;&lt;/a&gt;关于Nginx&lt;/h3&gt;&lt;p&gt;&lt;strong&gt; &lt;a href=&quot;https://nginx.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Nginx官网&lt;/a&gt; &lt;/strong&gt;&lt;br&gt;&lt;strong&gt; &lt;a href=&quot;https://zh.wikipedia.org/wiki/Nginx&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Nginx-Wikipedia&lt;/a&gt; &lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Nginx（发音同engine x）是一个 Web服务器，也可以用作反向代理，负载平衡器和 HTTP缓存。它能反向代理 &lt;code&gt;HTTP, HTTPS, SMTP, POP3, IMAP&lt;/code&gt; 的协议连接。&lt;br&gt;基于BSD-like协议发行，支持多种操作系统。&lt;br&gt;
    
    </summary>
    
      <category term="Databases" scheme="https://zhang21.github.io/categories/Databases/"/>
    
    
      <category term="Nginx" scheme="https://zhang21.github.io/tags/Nginx/"/>
    
  </entry>
  
  <entry>
    <title>Test-My-Site</title>
    <link href="https://zhang21.github.io/2017/08/30/Test-My-Site/"/>
    <id>https://zhang21.github.io/2017/08/30/Test-My-Site/</id>
    <published>2017-08-30T08:02:43.000Z</published>
    <updated>2017-09-05T06:59:02.097Z</updated>
    
    <content type="html"><![CDATA[<ul>
<li style="list-style: none"><input type="checkbox"> Monday</li>
<li style="list-style: none"><input type="checkbox"> Tuesday</li>
<li style="list-style: none"><input type="checkbox"> Wednesday</li>
<li style="list-style: none"><input type="checkbox"> Thursday</li>
<li style="list-style: none"><input type="checkbox"> Friday</li>
<li style="list-style: none"><input type="checkbox"> Saturday</li>
<li style="list-style: none"><input type="checkbox"> Sunday</li>
</ul>
<p><br><br>$$\sideset{^1_2}{^3_4}A$$</p>
<p>$E=mc^2$</p>
<p>$$\sum_{i=1}^n a_i=0$$</p>
<p>$$f(x_1,x_x,\ldots,x_n) = x_1^2 + x_2^2 + \cdots + x_n^2 $$</p>
<p>$$\sum^{j-1}<em>{k=0}{\widehat{\gamma}</em>{kj} z_k}$$</p>
]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li style=&quot;list-style: none&quot;&gt;&lt;input type=&quot;checkbox&quot;&gt; Monday&lt;/li&gt;
&lt;li style=&quot;list-style: none&quot;&gt;&lt;input type=&quot;checkbox&quot;&gt; Tuesday&lt;/li&gt;
&lt;li 
    
    </summary>
    
      <category term="Test" scheme="https://zhang21.github.io/categories/Test/"/>
    
    
      <category term="Testing" scheme="https://zhang21.github.io/tags/Testing/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://zhang21.github.io/2017/08/30/hello-world/"/>
    <id>https://zhang21.github.io/2017/08/30/hello-world/</id>
    <published>2017-08-29T16:00:00.000Z</published>
    <updated>2017-09-04T05:55:09.757Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<a id="more"></a>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
</feed>
